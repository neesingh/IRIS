%% IRIS - Indiana Retinal Imaging Simulator
%
% Parts based on the Fourier Optics Calculator © 2004 Larry Thibos, Indiana University
% Parts based on the works of authors mentioned in the "About" section of
% the settings.
%
% Git Demonstration for Larry
%
% Adapted and developed by Matt Jaskulski, University of Murcia © 2015
%
%
%% init
warning('off', 'MATLAB:uitabgroup:OldVersion'); % Geez, got it already!
warning('off', 'MATLAB:HandleGraphics:ObsoletedProperty:JavaFrame');

clear variables;
close all;
clc;

is_lang = 'en_US';
%is_lang = 'es_ES';

addpath 'io/';
addpath 'example data/';
addpath 'images/';
addpath 'includes/';
addpath 'interface/';
addpath 'includes/icons/';
addpath 'includes/zernike/';
addpath 'includes/zernike/wxy_reconstruction';
addpath 'includes/utilities/'
addpath 'includes/eye_models/'
addpath 'includes/graphics/';
addpath 'includes/iqmetrics/';
addpath 'languages/en_US/';

screensize = get(0, 'screensize');
figuresize = [0 0 max(1580, 0.9*screensize(3)) max(820, 0.85*screensize(4))];
figuresize = [max(0, (screensize(3) - figuresize(3))/2), max(0, (screensize(4) - figuresize(4))/2), figuresize(3), figuresize(4)];

cf = figure('name', '', 'units', 'pixels'); axis off;
set(0, 'units', 'pixels');

personalize_figure(cf, figuresize);

lang_path = ['languages',filesep,is_lang,filesep];
if(~strcmp(lang_path, ['languages',filesep,'en_US',filesep]))
    addpath(lang_path);
    ui_languages = struct(  'strings_original',   strings_original,...
                            'strings_translation',strings_translation);
else
    ui_languages = 0;   
end
                  
setappdata(cf, 'ui_languages', ui_languages);

year = clock; year = year(1);
uis = 0.02; uil = 0.14; uih = 0.075;        % normalized units for interface elements' spacing
fontsize_base = floor(figuresize(4)/100);   % evaluates to 9 for a 900px high display  

is_version = 0.93;
is_name = t('IRIS');
is_caption = {'Indiana'; 'Retinal Image'; 'Simulator'};
is_footer = sprintf(t('Released under CC BY-NC-ND 4.0 license. © %d. Jaskulski M, Thibos L, Bradley A, Kollbaum P. Clinical Optics Research Lab (CORL) at Indiana University School of Optometry.'), year);

set(cf, 'name', sprintf('%s v.%s', is_name, num2str(is_version)));

if(isdeployed)
    
    [status, result] = system('path');
    iris_root = char(regexpi(result, 'Path=(.*?);', 'tokens', 'once'));

    %iris_root = ctfroot; % also add -C to compiler
    
    mfile_root = mfilename('fullpath');
    mfile_root = mfile_root(1:end-5); % scrap "\IRIS"
else
    iris_root = pwd;
    mfile_root = pwd;
end

% WARNING. BEFORE CHANGING ANY OF THE FIELDS, MAKE SURE TO UPDATE THE
% CONFIG.MAT FILE. EDIT THE settings_dialog.m TO GET A CLUE WHATS WHAT
ui_defaults =struct('initial_zernikes',     28,...                      % how many we initially want to show
                    'selected_zernike',     5,...                       % index of the initially selected Zernike coefficient, C[2,0] => 5.
                    'zernike_import_cap',   45,...                      % although works up to 66, the Zernike recalc. scripts seem to work best with up to 36
                    'lambdas',              [700 550 400],...           % [nm] CIE standard is [700 546.1 435.8]. This affects the final image reconstruction.
                    'reference_lambda',     550,...                     % [nm] Larry uses 550.
                    'pixsize',              0.2,...                     % [arcmin]  
                    'show_messages',        1,...                       % switch for the wrapper for disp(); all calls to disp() should be replaced with show_msg() in the future
                    'no_psfs',              7,...                       % For Poly PSF analysis - the number of PSFs to calculate for each channel, Sowmya uses 7.
                    'no_steps',             7,...                       % Default number of Through-Zernike steps to perform.
                    'pupil_radius',         2.5,...                     % [mm] 2.5 is coherent with Jos Rozema's eye generator
                    'pupil_bits',           8,...                       % 7 - original FOC, 6 - crappy, 8 - pretty, Sowmya's choice too
                    'pupil_area',           0.95,...                    % default = 0.9, lower values will narrow the pupil but get rid of the edge effects. Wave iqmetrics expect 0.9.
                    'pupil_sce',            0.115,...                   % Stiles Crawford effect sigma parameter for pupil apodization. Default 0.115.
                    'psf_multiplier',       4,...                       % multiplying factor for size of PSF, OTF relative to PF. 
                    'psf_normalize',        1,...                       % set to 1 to force all PSFs to sum to one = central ordinate of OTF
                    'psf_rescale_method',   'lanczos3',...              % by default Larry uses 'bilinear'
                    'psf_diffraction_method','foc',...                  % method of calculating the diffraction-limited PSF: goodman, foc or somb
                    'bpp',                  8,...                       % no. bits per pixel for any image loaded into the IS, used for bitmap conversion
                    'haso_magnification',   2.65,...                 
                    'float_precision',      '2.3',...                   % used in sprintf throughout the program
                    'iris_root',            iris_root,...
                    'current_filepath',     [iris_root, filesep],...    % appended to the pwd in uiputfile and uigetfile windows
                    'log_file',             [iris_root, filesep, 'log.txt'],...    % file containing all of the messages shown to the user during IS's execution
                    'config_file',          [mfile_root, filesep, 'config.mat'],... % file containing all of the settings configurable via the settings panel
                    'is_name',              is_name,...
                    'is_version',           is_version,...
                    'is_footer',            is_footer);  

ui_figures = struct('fontsize_text',        fontsize_base,...
                    'fontsize_title',       floor(1.5*fontsize_base),...
                    'fontsize_axes',        floor(1.2*fontsize_base),...
                    'fontsize_panel',       floor(1.2*fontsize_base),...
                    'fontsize_small',       floor(0.8*fontsize_base),...
                    'fontcolor_primary',    [0.0 0.0 0.0],...
                    'fontcolor_secondary',  [0.5 0.5 0.5],...
                    'figure_size',          figuresize,...
                    'bg_figure',            get(cf, 'color'),...
                    'bg_panel',             [.95 .95 .95],...
                    'bg_charts',            [1.0 1.0 1.0],...
                    'bg_simulation',        [.15 .15 .15],...
                    'axis_simulation',      [0.5 0.5 0.5],...
                    'bg_edit',              [.85 .85 .85],...
                    'bg_special',           [ 90 209 21 ]/256,...
                    'bg_warning',           [242 119 68]/256,...
                    'bg_disabled',          [.95 .95 .95],...
                    'bg_highlighted',       [1.0 1.0 1.0],...
                    'bg_white',             [1.0 1.0 1.0],...
                    'bg_red',               [208 53  22 ]/256,...
                    'bg_green',             [ 90 209 21 ]/256,...
                    'bg_blue',              [ 86 158 200]/256,...
                    'bg_gold',              [237 211 130]/256,...  
                    'bg_grey',              [115 115 115]/256,...
                    'bg_black',             [0 0 0],...
                    'legend_linecolor',     [1.0 1.0 0.0],...
                    'ui_unit_spacing',      uis,...
                    'ui_unit_length',       uil,...
                    'ui_unit_height',       uih,...
                    'no_contours',          16,...
                    'colormap',             'jet');

if(exist(ui_defaults.config_file, 'file')), load(ui_defaults.config_file); end
% Repeat these because they can be overwriten by the user's old config file
ui_defaults.iris_root        = iris_root;
ui_defaults.current_filepath = [iris_root, filesep];               % appended to the pwd in uiputfile and uigetfile windows
ui_defaults.log_file         = [mfile_root, filesep, 'log.txt'];    % file containing all of the messages shown to the user during IS's execution
ui_defaults.config_file      = [mfile_root, filesep, 'config.mat']; % file containing all of the settings configurable via the settings panel

    %pause(1);

    %diag = figure(305);
    %txt = uicontrol(    'Parent', diag, 'Style', 'text', 'Units', 'normalized', 'Position', [0 0 1 1],...
    %                   'String', sprintf('PATH ROOT: %s\nCTFROOT: %s\nMFILEROOT: %s\nPWD: %s\n%s\n%s\n%s', ui_defaults.iris_root, ctfroot, mfilename('fullpath'), pwd, ui_defaults.current_filepath, ui_defaults.log_file, ui_defaults.config_file));

    %pause(1);
    %set(0, 'currentfigure', cf);
    
                
ui_devices = {  struct( 'id', 'manual',...
                        'name', 'Manual Input',...
                        'offset', [0; 0; 0],...
                        'lambda', 550),...
                struct( 'id', 'irx3',...
                        'name', 'IRX-3',...
                        'offset', [-0.25; 0; 0],...     % Nicolas' magic empirical subjective - objective offset
                        'lambda', 550),...              % although irx3 measures with an IR beam, it recalculates the zernikes for 550
                struct( 'id', 'haso',...
                        'name', 'HASO',...
                        'offset', [0; 0; 0],...
                        'lambda', 830),...
                struct( 'id', 'coas',...
                        'name', 'COAS',...
                        'offset', [0; 0; 0],...
                        'lambda', 840),...
                struct( 'id', 'opdscan3',...
                        'name', 'OPD-Scan III',...
                        'offset', [0;0;0],...
                        'lambda', 569)};
                    
                
if(ui_defaults.selected_zernike == 5)
    units = 'D';
else
    units = 'um';
end
[order, frequency] = mode2index(ui_defaults.selected_zernike);

ui_handles = struct( 'cf', cf );
         
setappdata(cf, 'ui_figures', ui_figures);
setappdata(cf, 'ui_devices', ui_devices);
setappdata(cf, 'ui_defaults', ui_defaults);

prepare_log(cf);

%% Divide the main figure into panels and tabbed panels

icon = imread('iris.png');
             logo = uicontrol(  'Parent', cf, 'Style', 'PushButton', 'BackgroundColor', ui_figures.bg_figure,...
                                'Units', 'normalized', 'Position', [0.015 0.900 0.070 0.1], 'cdata', icon); 
             removeBorder(logo);               
                    uicontrol(  'Parent', cf, 'Style', 'text', 'Units', 'normalized', 'HorizontalAlignment', 'left',...
                                'ForegroundColor', 0.6*ui_figures.bg_figure,...
                                'BackgroundColor', ui_figures.bg_figure,...
                                'Position', [0.080 0.90 0.95 0.085],...
                                'String', is_caption, 'FontSize', ui_figures.fontsize_title);
                            
ui_progress_bar =   uicontrol(  'Parent', cf, 'Style', 'text', 'Units', 'normalized', 'HorizontalAlignment', 'center',...
                                'BackgroundColor', [0 0 0],...
                                'Position', [0.025 0.995 0.025 0.075],...
                                'String', '', 'FontSize', 4); 
                            
icon = imread('wavefront.png');
ui_launch_mtf = uicontrol(  'Parent', cf, 'Style', 'PushButton', 'BackgroundColor', ui_figures.bg_edit,...
            'Units', 'normalized', 'Position', [0.925 0.9125 0.05 0.075], 'cdata', icon); 

icon = imread('iq_metrics.png');
ui_launch_iqm = uicontrol(  'Parent', cf, 'Style', 'PushButton', 'BackgroundColor', ui_figures.bg_edit,...
            'Units', 'normalized', 'Position', [0.870 0.9125 0.05 0.075], 'cdata', icon);
        
icon = imread('img_sim.png');
ui_launch_sim = uicontrol(  'Parent', cf, 'Style', 'PushButton', 'BackgroundColor', [0 0 0],...
            'Units', 'normalized', 'Position', [0.815 0.9125 0.05 0.075], 'cdata', icon);
                            
icon = imread('import.png');
ui_import_btn =     uicontrol(  'Parent', cf, 'Style', 'PushButton', 'BackgroundColor', [86 157 199]/256,...
                                'Units', 'normalized', 'Position', [0.745 0.9125 0.05 0.075], 'cdata', icon);
                            
icon = imread('settings.png');
ui_settings_btn =   uicontrol(  'Parent', cf, 'Style', 'PushButton', 'BackgroundColor', ui_figures.bg_warning,...
                                'Units', 'normalized', 'Position', [0.690 0.9125 0.05 0.075], 'cdata', icon);
    
    
uip_coefficients =  uipanel(    'Title', '', 'Units', 'normalized',...
                                'FontSize', ui_figures.fontsize_panel,...
                                'Position', [0.025 0.05 0.35 0.85]);
                    
uip_image =         uipanel(    'Title', '', 'Units', 'normalized',...
                                'FontSize', ui_figures.fontsize_panel,...
                                'Position', [0.385 0.51 0.285 0.39]);
                            
uip_setup =         uipanel(    'Title', '', 'Units', 'normalized',...
                                'FontSize', ui_figures.fontsize_panel,...
                                'Position', [0.385 0.05 0.285 0.45]);
                            
uip_preloader =     uipanel(    'Title', '', 'Units', 'normalized',...
                                'FontSize', ui_figures.fontsize_panel,...
                                'Position', [0.680 0.865 0.295 0.035]);
                                                     
uip_quickview =     uipanel(    'Title', '', 'Units', 'normalized',...
                                'FontSize', ui_figures.fontsize_panel,...
                                'Position', [0.680 0.05 0.295 0.80]);
                            
ui_preloader =      uicontrol(  'Parent', uip_preloader, 'Style', 'text', 'Units', 'normalized', 'HorizontalAlignment', 'center', 'Enable', 'off',...
                                'FontSize', ui_figures.fontsize_title, 'Position', [0.05 0 0.9 1],...
                                'ForegroundColor', 0.8*ui_figures.bg_figure, 'BackgroundColor', ui_figures.bg_figure,...
                                'String', t('Ready')); % this gets used by show_msg()
                            
ui_handles.preloader = ui_preloader;
setappdata(cf, 'ui_handles', ui_handles);
                            
uitabs_left =       uitabgroup(uip_coefficients, 'Units', 'normalized', 'Position', [0 0 1 1]);
uitabs_top =        uitabgroup(uip_image,'Units','normalized', 'Position', [0 0 1 1]);
uitabs_middle =     uitabgroup(uip_setup, 'Units', 'normalized', 'Position', [0 0 1 1]);
uitabs_quickview =  uitabgroup(uip_quickview, 'Units', 'normalized', 'Position', [0 0 1 1]);
                            
uitab_zernikes =    uitab(uitabs_left,      'Title', t('Input (Zernike)'));
uitab_ophtalmic=    uitab(uitabs_left,      'Title', t('Optometry'));
uitab_add_Wxy =     uitab(uitabs_left,      'Title', t('Add Wavefront'));
uitab_batch =       uitab(uitabs_left,      'Title', t('Batch Mode'));
uitab_image =       uitab(uitabs_top,       'Title', t('Target (Click to change)'), 'Tag', '0');
uitab_analysis =    uitab(uitabs_middle,    'Title', t('Analysis Setup'));
uitab_pupil =       uitab(uitabs_middle,    'Title', t('Pupil'));
uitab_psf  =        uitab(uitabs_middle,    'Title', t('PSF'));
uitab_polypsf =     uitab(uitabs_middle,    'Title', t('Color PSF'));
uitab_qv_2d =       uitab(uitabs_quickview, 'Title', t('Overview'));
uitab_qv_psf=       uitab(uitabs_quickview, 'Title', t('PSF'), 'BackgroundColor', ui_figures.bg_simulation);
uitab_qv_pupil=     uitab(uitabs_quickview, 'Title', t('Pupil'), 'BackgroundColor', ui_figures.bg_simulation);
uitab_qv_summary =  uitab(uitabs_quickview, 'Title', t('Summary'), 'BackgroundColor', ui_figures.bg_charts);
                            
ui_handles.uipanel_zernikes = uitab_zernikes;
ui_handles.uitab_quickview_2d = uitab_qv_2d;
ui_handles.uitab_quickview_psf= uitab_qv_psf;
ui_handles.uitab_quickview_pupil = uitab_qv_pupil;
ui_handles.uitab_quickview_summary = uitab_qv_summary;
        
% aligned to the bottom
icon = imread('update.png');
ui_calc_quickview = uicontrol(  'Parent', uip_quickview, 'Style', 'PushButton', 'Units', 'normalized', 'HorizontalAlignment', 'right',...
                                'String', '', 'cdata', icon, 'Position', [1-uis-0.15 uis 0.15 uih],...
                                'FontSize', ui_figures.fontsize_text, 'BackgroundColor', ui_figures.bg_green);

%% Zernikes Panel

uiy = 1-0.5*uis;
                            
ui_radiogroup = uibuttongroup(  'Parent', uitab_zernikes, 'Position',[0 0 1 1], 'Units', 'Normalized', 'BorderType', 'none');
ui_handles.uigroup_radios = ui_radiogroup;
                            
setappdata(cf, 'ui_handles', ui_handles);
setappdata(cf, 'ui_zernikes', []);
setappdata(cf, 'ui_radios', []);
                                             
uiy = uiy-uis-0.5*uih;
                    uicontrol(  'Parent', uitab_zernikes, 'Style', 'text', 'Units', 'normalized', 'HorizontalAlignment', 'left',...
                                'String', t('Pupil Radius [mm]:'), 'Position', [uis uiy-uis 1.5*uil uih-uis],...
                                'FontSize', ui_figures.fontsize_text);
ui_pupil_radius =   uicontrol(  'Parent', uitab_zernikes, 'Style', 'edit', 'Units', 'normalized',...
                                'String', sprintf(['%',ui_defaults.float_precision,'f'], ui_defaults.pupil_radius), 'Position', [1.5*uil uiy uil 0.6*uih],...
                                'FontSize', 1.7*ui_figures.fontsize_text, 'BackgroundColor', ui_figures.bg_edit,...
                                'Callback', { @validate_double, ui_defaults.pupil_radius });

dropdown_content = cell(length(ui_devices),1);                           
for i = 1:length(ui_devices)
    dropdown_content{i} = sprintf('%s', ui_devices{i}.name);
end
ui_zernike_source = uicontrol(  'Parent', uitab_zernikes, 'Style', 'popup', 'Units', 'normalized',...
                                'String', dropdown_content, 'Position', [1-uis-1.8*uil uiy 1.8*uil 0.6*uih],...
                                'FontSize', 1.5*ui_figures.fontsize_text);                      
                            
                    uicontrol(  'Parent', uitab_zernikes, 'Style', 'text', 'Units', 'normalized', 'HorizontalAlignment', 'left',...
                                'String', t('Rescale [mm]:'), 'Position', [uis+2.5*uil uiy-uis 1.5*uil uih-uis],...
                                'FontSize', ui_figures.fontsize_text);
ui_pupil_radius_recalc=uicontrol('Parent', uitab_zernikes, 'Style', 'edit', 'Units', 'normalized',...
                                'String', sprintf(['%',ui_defaults.float_precision,'f'], ui_defaults.pupil_radius), 'Position', [2*uis+3.5*uil uiy 0.8*uil 0.6*uih],...
                                'FontSize', ui_figures.fontsize_text, 'BackgroundColor', ui_figures.bg_edit,...
                                'Callback', { @validate_double, ui_defaults.pupil_radius });

uiy = uiy-0.5*uih-uis;
                    uicontrol(  'Parent', uitab_zernikes, 'Style', 'text', 'Units', 'normalized', 'HorizontalAlignment', 'left',...
                                'String', t('Rotate [deg]:'), 'Position', [uis uiy-uis uil uih-uis],...
                                'FontSize', ui_figures.fontsize_text); 
ui_zernike_rotation = uicontrol('Parent', uitab_zernikes, 'Style', 'edit', 'Units', 'normalized',...
                                'String', sprintf(['%',ui_defaults.float_precision,'f'], 0), 'Position', [1.5*uil uiy uil 0.6*uih],...
                                'FontSize', ui_figures.fontsize_text, 'BackgroundColor', ui_figures.bg_edit,...
                                'Callback', { @validate_double, ui_defaults.pupil_radius });
                            
                    %uicontrol(  'Parent', uitab_zernikes, 'Style', 'text', 'Units', 'normalized', 'HorizontalAlignment', 'left',...
                     %           'String', t('Propagate [mm]:'), 'Position', [uis+2.5*uil uiy-uis 1.2*uil uih-uis],...
                      %          'FontSize', ui_figures.fontsize_text);
ui_propagate_Wxy =  uicontrol(  'Parent', uitab_zernikes, 'Style', 'edit', 'Units', 'normalized', 'Visible', 'off',...
                                'String', sprintf(['%',ui_defaults.float_precision,'f'], 0), 'Position', [2*uis+3.5*uil uiy 0.8*uil 0.6*uih],...
                                'FontSize', ui_figures.fontsize_text, 'BackgroundColor', ui_figures.bg_edit,...
                                'Callback', { @validate_double, 0 });
                    %uicontrol(  'Parent', uitab_zernikes, 'Style', 'text', 'Units', 'normalized', 'HorizontalAlignment', 'left',...
                     %           'String', t('(experimental)'), 'Position', [2*uis+3.5*uil uiy-0.6*uih 1.2*uil 0.6*uih],...
                      %          'FontSize', ui_figures.fontsize_text, 'ForegroundColor', ui_figures.fontcolor_secondary);
                            
                            
          
                     uicontrol( 'Parent', uitab_zernikes, 'Style', 'text', 'Units', 'normalized', 'HorizontalAlignment', 'right',...
                                'String', t('l'), 'Position', [1-2*uis-1.2*uil uiy-0.5*uih 0.2*uil uih],...
                                'FontSize', ui_figures.fontsize_title, 'FontName', 'Symbol');
ui_device_lambda =  uicontrol(  'Parent', uitab_zernikes, 'Style', 'edit', 'Units', 'normalized',...
                                'String', sprintf(['%',ui_defaults.float_precision,'f'], ui_defaults.reference_lambda), 'Position', [1-uis-uil uiy uil 0.6*uih],...
                                'FontSize', ui_figures.fontsize_text, 'BackgroundColor', ui_figures.bg_edit,...
                                'Callback', { @validate_double, ui_defaults.reference_lambda });
                            
set(ui_zernike_source, 'Callback', { @setup_device_ui, ui_device_lambda });
                            
uiy = uiy-0.5*uih-uis;    

                    uicontrol(  'Parent', uitab_zernikes, 'Style', 'text', 'Units', 'normalized', 'HorizontalAlignment', 'left',...
                                'String', t('Translate [mm]:'), 'Position', [uis uiy-uis 1.5*uil uih-uis],...
                                'FontSize', ui_figures.fontsize_text);
ui_translate_x   =  uicontrol(  'Parent', uitab_zernikes, 'Style', 'edit', 'Units', 'normalized',...
                                'String', sprintf(['%',ui_defaults.float_precision,'f'], 0), 'Position', [1.5*uil uiy 0.6*uil 0.6*uih],...
                                'FontSize', ui_figures.fontsize_text, 'BackgroundColor', ui_figures.bg_edit,...
                                'Callback', { @validate_double, 0 });
                    uicontrol(  'Parent', uitab_zernikes, 'Style', 'text', 'Units', 'normalized', 'HorizontalAlignment', 'left',...
                                'String', t('horizontal'), 'Position', [0.5*uis+2.1*uil uiy-uis uil uih-uis],...
                                'FontSize', ui_figures.fontsize_text, 'ForegroundColor', ui_figures.fontcolor_secondary);                          
uiy = uiy - 0.5*uih - uis;
ui_translate_y   =  uicontrol(  'Parent', uitab_zernikes, 'Style', 'edit', 'Units', 'normalized',...
                                'String', sprintf(['%',ui_defaults.float_precision,'f'], 0), 'Position', [1.5*uil uiy 0.6*uil 0.6*uih],...
                                'FontSize', ui_figures.fontsize_text, 'BackgroundColor', ui_figures.bg_edit,...
                                'Callback', { @validate_double, 0 });
                    uicontrol(  'Parent', uitab_zernikes, 'Style', 'text', 'Units', 'normalized', 'HorizontalAlignment', 'left',...
                                'String', t('vertical'), 'Position', [0.5*uis+2.1*uil uiy-uis uil uih-uis],...
                                'FontSize', ui_figures.fontsize_text, 'ForegroundColor', ui_figures.fontcolor_secondary);  
% aligned to the bottom

                    uicontrol(  'Parent', uitab_zernikes, 'Style', 'text', 'Units', 'normalized', 'HorizontalAlignment', 'center',...
                                'String', t('Divide by:'), 'Position', [1-1*(uis+0.10) 2*uis+0.6*uih 0.10 0.5*uih],...
                                'FontSize', ui_figures.fontsize_text);
ui_divide_zernikes_by=uicontrol('Parent', uitab_zernikes, 'Style', 'edit', 'Units', 'normalized', 'HorizontalAlignment', 'center',...
                                'String', sprintf(['%',ui_defaults.float_precision,'f'], 3), 'Position', [1-1*(uis+0.10) 3*uis 0.10 0.5*uih],...
                                'FontSize', ui_figures.fontsize_text, 'BackgroundColor', ui_figures.bg_edit,...
                                'Callback', { @validate_double, 3 });                        
ui_divide_zernikes = uicontrol( 'Parent', uitab_zernikes, 'Style', 'PushButton', 'Units', 'normalized', 'HorizontalAlignment', 'right',...
                                'String', t('Apply'), 'Position', [1-1*(uis+0.10) uis 0.10 0.5*uih],...
                                'FontSize', ui_figures.fontsize_text, 'BackgroundColor', ui_figures.bg_green);


icon = imread('zernike_import_add.png');
                    uicontrol(  'Parent', uitab_zernikes, 'Style', 'text', 'Units', 'normalized', 'HorizontalAlignment', 'center',...
                                'String', t('Stack'), 'Position', [1-2*(uis+0.10) 2*uis+0.6*uih 0.10 0.5*uih],...
                                'FontSize', ui_figures.fontsize_text);
ui_importadd_zernikes=uicontrol('Parent', uitab_zernikes, 'Style', 'PushButton', 'Units', 'normalized', 'HorizontalAlignment', 'right',...
                                'String', '', 'cdata', icon, 'Position', [1-2*(uis+0.10) uis 0.10 uih],...
                                'FontSize', ui_figures.fontsize_text, 'BackgroundColor', ui_figures.bg_green);

icon = imread('zernike_import.png');
                    uicontrol(  'Parent', uitab_zernikes, 'Style', 'text', 'Units', 'normalized', 'HorizontalAlignment', 'center',...
                                'String', t('Load'), 'Position', [1-3*(uis+0.10) 2*uis+0.6*uih 0.10 0.5*uih],...
                                'FontSize', ui_figures.fontsize_text);
ui_import_zernikes = uicontrol( 'Parent', uitab_zernikes, 'Style', 'PushButton', 'Units', 'normalized', 'HorizontalAlignment', 'right',...
                                'String', '', 'cdata', icon, 'Position', [1-3*(uis+0.10) uis 0.10 uih],...
                                'FontSize', ui_figures.fontsize_text, 'BackgroundColor', ui_figures.bg_green);
                            
icon = imread('zernike_export.png');
                    uicontrol(  'Parent', uitab_zernikes, 'Style', 'text', 'Units', 'normalized', 'HorizontalAlignment', 'center',...
                                'String', t('Save'), 'Position', [1-4*(uis+0.10) 2*uis+0.6*uih 0.10 0.5*uih],...
                                'FontSize', ui_figures.fontsize_text);
ui_export_zernikes = uicontrol( 'Parent', uitab_zernikes, 'Style', 'PushButton', 'Units', 'normalized',...
                                'String', '', 'cdata', icon, 'Position', [1-4*(uis+0.10) uis 0.10 uih],...
                                'FontSize', ui_figures.fontsize_text, 'BackgroundColor', ui_figures.bg_blue);
                            
icon = imread('clipboard.png');
                    uicontrol(  'Parent', uitab_zernikes, 'Style', 'text', 'Units', 'normalized', 'HorizontalAlignment', 'center',...
                                'String', t('Copy'), 'Position', [0.9-uis 0.9-2*uih+uis 0.10 0.5*uih],...
                                'FontSize', ui_figures.fontsize_text);
ui_copy_zernikes =  uicontrol(  'Parent', uitab_zernikes, 'Style', 'PushButton', 'Units', 'normalized',...
                                'String', '', 'cdata', icon, 'Position', [0.9-uis 0.90-2*(uis+uih) 0.10 uih],...
                                'FontSize', ui_figures.fontsize_text, 'BackgroundColor', ui_figures.bg_edit);
                            
icon = imread('calc.png');
                    uicontrol(  'Parent', uitab_zernikes, 'Style', 'text', 'Units', 'normalized', 'HorizontalAlignment', 'center',...
                                'String', t('Recalc.'), 'Position', [0.8-2*uis 0.9-2*uih+uis 0.10 0.5*uih],...
                                'FontSize', ui_figures.fontsize_text);
ui_recalc_zernikes =uicontrol(  'Parent', uitab_zernikes, 'Style', 'PushButton', 'Units', 'normalized',...
                                'String', '', 'cdata', icon, 'Position', [0.8-2*uis 0.90-2*(uis+uih) 0.10 uih],...
                                'FontSize', ui_figures.fontsize_text, 'BackgroundColor', [76 219 196]/256);
                            
icon = imread('zernike_generate.png');
                    uicontrol(  'Parent', uitab_zernikes, 'Style', 'text', 'Units', 'normalized', 'HorizontalAlignment', 'center',...
                                'String', t('Generate'), 'Position', [2*uis+0.1 2*uis+0.6*uih 0.10 0.5*uih],...
                                'FontSize', ui_figures.fontsize_text);
ui_generate_zernikes =uicontrol('Parent', uitab_zernikes, 'Style', 'PushButton', 'Units', 'normalized',...
                                'String', '', 'cdata', icon, 'Position', [2*uis+0.1 uis 0.10 uih],...
                                'FontSize', ui_figures.fontsize_text, 'BackgroundColor', ui_figures.bg_gold);
                            
ui_generate_zernikes_mode = uibuttongroup( 'Parent', uitab_zernikes, 'Position', [2*uis+0.2 uis 1.5*uil uih], 'Units', 'Normalized');% 'BorderType', 'none','BackgroundColor', [0 0 0]);
                   
ui_generate_normal = uicontrol( 'Parent', ui_generate_zernikes_mode, 'Style', 'radiobutton', 'Units', 'normalized',...
                                'String', t('Normal'), 'FontSize', ui_figures.fontsize_text,...
                                'Position', [0 0.5 1 0.5]);
                             
ui_generate_queratoconic=uicontrol(...
                                'Parent', ui_generate_zernikes_mode, 'Style', 'radiobutton', 'Units', 'normalized',...
                                'String', t('Keratoconic'), 'FontSize', ui_figures.fontsize_text,...
                                'Position', [0 0 1 0.5]); 
                            
                            
icon = imread('zernike_reset.png');
                    uicontrol(  'Parent', uitab_zernikes, 'Style', 'text', 'Units', 'normalized', 'HorizontalAlignment', 'center',...
                                'String', t('Reset'), 'Position', [uis 2*uis+0.6*uih 0.10 0.5*uih],...
                                'FontSize', ui_figures.fontsize_text);
ui_reset_zernikes = uicontrol(  'Parent', uitab_zernikes, 'Style', 'PushButton', 'Units', 'normalized',...
                                'String', '', 'cdata', icon, 'Position', [uis uis 0.10 uih],...
                                'FontSize', ui_figures.fontsize_text, 'BackgroundColor', ui_figures.bg_red);

%% Batch Processing Panel

is_ui_part_batch;

%% Add Wavefront Panel

uiy = 1 - 0.5*uih - 1.5*uis;

                    uicontrol(  'Parent', uitab_add_Wxy, 'Style', 'text', 'Units', 'normalized', 'HorizontalAlignment', 'left',...
                                'String', t('Pupil Radius [mm]:'), 'Position', [uis uiy-uis 1.5*uil uih-uis],...
                                'FontSize', ui_figures.fontsize_text);
ui_add_Wxy_radius = uicontrol(  'Parent', uitab_add_Wxy, 'Style', 'edit', 'Units', 'normalized',...
                                'String', sprintf(['%',ui_defaults.float_precision,'f'], ui_defaults.pupil_radius), 'Position', [1.5*uil uiy uil 0.6*uih],...
                                'FontSize', 1.5*ui_figures.fontsize_text, 'BackgroundColor', ui_figures.bg_edit, 'Enable', 'off',...
                                'Callback', { @validate_double, ui_defaults.pupil_radius });
                            
                    uicontrol(  'Parent', uitab_add_Wxy, 'Style', 'text', 'Units', 'normalized', 'HorizontalAlignment', 'left',...
                                'String', t('Scaling Factor:'), 'Position', [uis+2.5*uil uiy-uis 1.5*uil uih-uis],...
                                'FontSize', ui_figures.fontsize_text);
ui_add_Wxy_scale = uicontrol(   'Parent', uitab_add_Wxy, 'Style', 'edit', 'Units', 'normalized',...
                                'String', sprintf(['%',ui_defaults.float_precision,'f'], 1.0), 'Position', [2*uis+3.5*uil uiy 0.8*uil 0.6*uih],...
                                'FontSize', ui_figures.fontsize_text, 'BackgroundColor', ui_figures.bg_edit,...
                                'Callback', { @validate_double, 1.0 });
          
                dl = uicontrol( 'Parent', uitab_add_Wxy, 'Style', 'text', 'Units', 'normalized', 'HorizontalAlignment', 'right',...
                                'String', t('l'), 'Position', [1-2*uis-1.2*uil uiy-0.5*uih 0.2*uil uih],...
                                'FontSize', ui_figures.fontsize_title, 'FontName', 'Symbol');
ui_add_Wxy_lambda =  uicontrol(  'Parent', uitab_add_Wxy, 'Style', 'edit', 'Units', 'normalized',...
                                'String', sprintf(['%',ui_defaults.float_precision,'f'], ui_defaults.reference_lambda), 'Position', [1-uis-uil uiy uil 0.6*uih],...
                                'FontSize', ui_figures.fontsize_text, 'BackgroundColor', ui_figures.bg_edit, 'Enable', 'off',...
                                'Callback', { @validate_double, ui_defaults.reference_lambda });
           
uiy = uiy - 0.5*uih - uis;
uip_add_Wxy = uipanel(          'Parent', uitab_add_Wxy, 'Title', t('Wavefront to Add'), 'Tag', '',...
                                'Units', 'normalized', 'Position', [uis 0.1+2*uis 1-2*uis uiy-uih-2*uis]);
                            
icon = imread('zernike_import.png');
                    uicontrol(  'Parent', uitab_add_Wxy, 'Style', 'text', 'Units', 'normalized', 'HorizontalAlignment', 'center',...
                                'String', t('Load'), 'Position', [2*uis+0.1 2*uis+0.6*uih 0.10 0.5*uih],...
                                'FontSize', ui_figures.fontsize_text);
ui_load_add_Wxy =   uicontrol(  'Parent', uitab_add_Wxy, 'Style', 'PushButton', 'Units', 'normalized', 'HorizontalAlignment', 'right',...
                                'String', '', 'cdata', icon, 'Position', [2*uis+0.1 uis 0.10 uih] ,...
                                'FontSize', ui_figures.fontsize_text, 'BackgroundColor', ui_figures.bg_green);
                            
icon = imread('zernike_reset.png');
                    uicontrol(  'Parent', uitab_add_Wxy, 'Style', 'text', 'Units', 'normalized', 'HorizontalAlignment', 'center',...
                                'String', t('Reset'), 'Position', [uis 2*uis+0.6*uih 0.10 0.5*uih],...
                                'FontSize', ui_figures.fontsize_text);
ui_reset_add_Wxy = uicontrol(   'Parent', uitab_add_Wxy, 'Style', 'PushButton', 'Units', 'normalized',...
                                'String', '', 'cdata', icon, 'Position', [uis uis 0.10 uih],...
                                'FontSize', ui_figures.fontsize_text, 'BackgroundColor', ui_figures.bg_red);
                            
% aligned to the bottom
icon = imread('update.png');
                    uicontrol(  'Parent', uitab_add_Wxy, 'Style', 'text', 'Units', 'normalized', 'HorizontalAlignment', 'center',...
                                'String', t('Update'), 'Position', [1-uis-0.15 2*uis+0.6*uih 0.15 0.5*uih],...
                                'FontSize', ui_figures.fontsize_text);
ui_update_add_Wxy = uicontrol(  'Parent', uitab_add_Wxy, 'Style', 'PushButton', 'Units', 'normalized', 'HorizontalAlignment', 'right',...
                                'String', '', 'cdata', icon, 'Position', [1-uis-0.15 uis 0.15 uih],...
                                'FontSize', ui_figures.fontsize_text, 'BackgroundColor', ui_figures.bg_green);

%% Ophtalmic Coefficients Panel

is_ui_part_ophthalmic;
                            
                            
%% Set Up Panel

uiy = 1-2*uis-uih;

ui_analysis_radios = uibuttongroup( 'Parent', uitab_analysis, 'Position',[0 0 1 1], 'Units', 'Normalized', 'BorderType', 'none');
                   
ui_mode_single =      uicontrol('Parent', ui_analysis_radios, 'Style', 'radiobutton', 'Units', 'normalized',...
                                'String', sprintf(t('Single Analysis - C(%s,%s) [%s]'), num2str(order), num2str(frequency), units), 'Tag', 'Single',...
                                'FontSize', ui_figures.fontsize_text, 'Position', [uis uiy-0.6*uih 1-2*uis 2*uih]);
                            
                      uicontrol('Parent', uitab_analysis, 'Style', 'text', 'Units', 'normalized', 'HorizontalAlignment', 'right',...
                                'String', t('Coefficient Offset (+/-):'), 'Position', [1-3.5*uil uiy-0.6*uih 2*uil uih],...
                                'FontSize', ui_figures.fontsize_text);
                            
ui_analysis_offset =  uicontrol('Parent', uitab_analysis, 'Style', 'edit', 'Units', 'normalized', 'HorizontalAlignment', 'center',...
                                'String', sprintf(['%',ui_defaults.float_precision,'f'], 0), 'Position', [5*uis+5*uil uiy-0.6*uih 1.2*uil 1.5*uih],...
                                'FontSize', ui_figures.fontsize_text, 'BackgroundColor', ui_figures.bg_edit,...
                                'Callback', { @validate_double });
uiy = uiy - uih - 3*uis;

ui_mode_through = uicontrol(    'Parent', ui_analysis_radios, 'Style', 'radiobutton', 'Units', 'normalized',...
                                'String', sprintf(t('Through Zernike - C(%s,%s) [%s]'), num2str(order), num2str(frequency), units), 'Tag', 'Single',...
                                'FontSize', ui_figures.fontsize_text, 'Position', [uis uiy-0.6*uih 1-2*uis 2*uih]);
                     uicontrol( 'Parent', uitab_analysis, 'Style', 'text', 'Units', 'normalized', 'HorizontalAlignment', 'right',...
                                'String', t('No. Steps:'), 'Position', [1-3.5*uil uiy-0.6*uih 2*uil uih],...
                                'FontSize', ui_figures.fontsize_text);                           
ui_analysis_steps =  uicontrol( 'Parent', uitab_analysis, 'Style', 'edit', 'Units', 'normalized',...
                                'String', ui_defaults.no_steps, 'Position', [5*uis+5*uil uiy-0.6*uih 1.2*uil 1.5*uih],...                   
                                'FontSize', ui_figures.fontsize_text, 'BackgroundColor', ui_figures.bg_edit,...
                                'Callback', { @validate_int, ui_defaults.no_steps });
uiy = uiy - 2*uih - 3*uis;                           

                    uicontrol( 'Parent', uitab_analysis, 'Style', 'text', 'Units', 'normalized', 'HorizontalAlignment', 'left',...
                               'String', t('Start Value:'), 'Position', [uis+0.5*uil uiy-0.3*uih 4*uil 2*uih], 'FontSize', ui_figures.fontsize_text);
ui_from_txt =       uicontrol( 'Parent', uitab_analysis, 'Style', 'text', 'Units', 'normalized', 'FontSize', ui_figures.fontsize_text,...
                               'String', '-2.0', 'Position', [5*uis+5*uil uiy-0.3*uih 1.2*uil 2*uih]);
ui_analysis_from =  uicontrol( 'Parent', uitab_analysis, 'Style', 'slider', 'Units', 'normalized', 'BackgroundColor', 0.8*ui_figures.bg_figure,...
                               'Min', -15, 'Max', 15, 'SliderStep', [0.05, 0.5] / (15), 'Value', -2, 'Position', [2*uil uiy+uih-uis 3.7*uil-uis uih]); 
uiy = uiy - uih - uis;
                    uicontrol( 'Parent', uitab_analysis, 'Style', 'text', 'Units', 'normalized', 'HorizontalAlignment', 'left',...
                               'String', t('End Value:'), 'Position', [uis+0.5*uil uiy-0.3*uih 4*uil 2*uih], 'FontSize', ui_figures.fontsize_text);
ui_to_txt =         uicontrol( 'Parent', uitab_analysis, 'Style', 'text', 'Units', 'normalized', 'FontSize', ui_figures.fontsize_text,...
                               'String', '2.0', 'Position', [5*uis+5*uil uiy-0.3*uih 1.2*uil 2*uih]);
ui_analysis_to =    uicontrol( 'Parent', uitab_analysis, 'Style', 'slider', 'Units', 'normalized', 'BackgroundColor', 0.8*ui_figures.bg_figure,...
                               'Min', -15, 'Max', 15, 'SliderStep', [0.05, 0.5] / (15), 'Value', 2, 'Position', [2*uil uiy+uih-uis 3.7*uil-uis uih]);
                           
uiy = uiy - uih;
                   uicontrol(  'Parent', uitab_analysis, 'Style', 'text', 'Units', 'normalized', 'HorizontalAlignment', 'left',...
                               'String', t('Retinal Image Simulation Scaling'), 'Position', [uis uiy 1-2*uis 0.7*uih],...
                               'FontSize', ui_figures.fontsize_text);                      
uiy = uiy - uih - uis;                          
ui_image_arcmins = uicontrol(  'Parent', uitab_analysis, 'Style', 'edit', 'Units', 'normalized',...
                               'String', sprintf(['%',ui_defaults.float_precision,'f'], 2), 'Position', [uis uiy 1.8*uil 1.2*uih],...
                               'FontSize', ui_figures.fontsize_text, 'BackgroundColor', ui_figures.bg_edit,...
                               'Callback', { @validate_double, 2 });
                   uicontrol(  'Parent', uitab_analysis, 'Style', 'text', 'Units', 'normalized', 'HorizontalAlignment', 'center',...
                               'String', '/', 'Position', [2*uis+1.8*uil uiy-0.3*uih uis 1.2*uih],...
                               'FontSize', ui_figures.fontsize_text); 
ui_image_pixels =  uicontrol(  'Parent', uitab_analysis, 'Style', 'edit', 'Units', 'normalized',...
                               'String', sprintf('%1.1f', 10), 'Position', [4*uis+1.8*uil uiy 1.8*uil 1.2*uih],...
                               'FontSize', ui_figures.fontsize_text, 'BackgroundColor', ui_figures.bg_edit,...
                               'Callback', { @validate_int, 10 });

ui_calculated_pixsize=uicontrol('Parent', uitab_analysis, 'Style', 'edit', 'Units', 'normalized', 'Enable', 'inactive',...
                                'String', sprintf(['%',ui_defaults.float_precision,'f'], ui_defaults.pixsize), 'Position', [6*uis+4.4*uil uiy 1.8*uil 1.2*uih],...
                                'FontSize', ui_figures.fontsize_text, 'BackgroundColor', ui_figures.bg_disabled);

ui_calc_pixsize =  uicontrol(   'Parent', uitab_analysis, 'Style', 'PushButton', 'Units', 'normalized',...
                                'String', '=', 'Position', [5*uis+3.6*uil uiy 0.8*uil 1.2*uih],...
                                'FontSize', ui_figures.fontsize_text, 'BackgroundColor', ui_figures.bg_green);
                            
                   uicontrol(  'Parent', uitab_analysis, 'Style', 'text', 'Units', 'normalized', 'HorizontalAlignment', 'center',...
                               'String', t('Height [arcmin]'), 'Position', [uis uiy-uih 1.8*uil 0.7*uih],...
                               'FontSize', ui_figures.fontsize_text);
                   uicontrol(  'Parent', uitab_analysis, 'Style', 'text', 'Units', 'normalized', 'HorizontalAlignment', 'center',...
                               'String', t('Height [pix]'), 'Position', [4*uis+1.8*uil uiy-uih 1.8*uil 0.7*uih],...
                               'FontSize', ui_figures.fontsize_text);                         
                   uicontrol(  'Parent', uitab_analysis, 'Style', 'text', 'Units', 'normalized', 'HorizontalAlignment', 'center',...
                               'String', t('Scale [am/pix]'), 'Position', [6*uis+4.4*uil uiy-uih 1.8*uil 0.7*uih],...
                               'FontSize', ui_figures.fontsize_text);
uiy = uiy - 4*uih - uis;
                    uicontrol(  'Parent', uitab_analysis, 'Style', 'text', 'Units', 'normalized', 'Value', 0, 'HorizontalAlignment', 'left',...
                                'String', t('Example: The default scale is 2 arc minutes per 10 pixels, or 0.2 arc minutes per pixel. With the image of the hand this corresponds to logMAR = 0.3, VAd = 0.5, or 20/40 vision.'),...
                                'FontSize', ui_figures.fontsize_text, 'ForegroundColor', ui_figures.fontcolor_secondary, 'Position', [uis, uiy, 1-2*uis, 3*uih]);

                            
%% Target Image Panel

ui_target_thumb = uicontrol(   'Parent', uitab_image, 'Style', 'PushButton', 'Units', 'pixels',...
                               'String', '', 'Position', [0 0 1 1], 'cdata', [],...
                               'ForegroundColor', ui_figures.legend_linecolor, 'BackgroundColor', ui_figures.bg_simulation,...
                               'FontSize', 2*ui_figures.fontsize_title);  
                           
ui_image_dimensions = uicontrol('Parent', uitab_image, 'Style', 'text', 'Units', 'normalized',...
                                'String', '', 'Position', [0 0 1 uih+uis],...
                                'FontSize', ui_figures.fontsize_text);

%% Pupil Tab

uiy = 1-2*uis-uih;
                    uicontrol(  'Parent', uitab_pupil, 'Style', 'text', 'Units', 'normalized', 'HorizontalAlignment', 'left',...
                                'String', t('Stiles Crawford Sigma:'), 'Position', [uis uiy-uis 4*uil uih],...
                                'FontSize', ui_figures.fontsize_text);
uiy = uiy - uih;
                    uicontrol(  'Parent', uitab_pupil, 'Style', 'text', 'Units', 'normalized', 'Value', 0, 'HorizontalAlignment', 'left',...
                                'String', t('The exponent of the Gaussian function modelling the SCE'),...
                                'FontSize', ui_figures.fontsize_text, 'ForegroundColor', ui_figures.fontcolor_secondary, 'Position', [uis, uiy, 0.9, uih]);
                            
ui_pupil_sce =      uicontrol(  'Parent', uitab_pupil, 'Style', 'edit', 'Units', 'normalized',...
                                'String', sprintf(['%',ui_defaults.float_precision,'f'], ui_defaults.pupil_sce),...
                                'Position', [5*uis+5*uil uiy+uis 1.2*uil 1.5*uih],...
                                'FontSize', ui_figures.fontsize_text, 'BackgroundColor', ui_figures.bg_edit,...
                                'Callback', { @validate_double, ui_defaults.pupil_sce });
uiy = uiy - 2*uih - 4*uis;
                    uicontrol(  'Parent', uitab_pupil, 'Style', 'text', 'Units', 'normalized', 'HorizontalAlignment', 'left',...
                                'String', t('Pupil Ellipticity:'), 'Position', [uis uiy-0.3*uih 4*uil 2*uih],...
                                'FontSize', ui_figures.fontsize_text);
ui_pupil_ellipticity=uicontrol( 'Parent', uitab_pupil, 'Style', 'slider', 'Units', 'normalized', 'BackgroundColor', 0.8*ui_figures.bg_figure,...
                                'Min', 0, 'Max', 1, 'SliderStep', [0.05, 0.1], 'Value', 0,'Position', [2*uil uiy+uih-uis 3.7*uil-uis uih]);
                           
ui_pupil_preview = uicontrol(   'Parent', uitab_pupil, 'Style', 'pushbutton', 'Units', 'normalized', 'Position', [5*uis+5*uil uiy-0.3*uih-uis 1.2*uil 2.4*uih],...
                                'BackgroundColor', [0 0 0], 'cdata', []);
                           
uiy = uiy - uih - uis;
                    uicontrol( 'Parent', uitab_pupil, 'Style', 'text', 'Units', 'normalized', 'HorizontalAlignment', 'left',...
                               'String', t('Pupil Rotation:'), 'Position', [uis uiy-0.3*uih 4*uil 2*uih],...
                               'FontSize', ui_figures.fontsize_text);
ui_pupil_rotation = uicontrol( 'Parent', uitab_pupil, 'Style', 'slider', 'Units', 'normalized', 'BackgroundColor', 0.8*ui_figures.bg_figure,...
                               'Min', 0, 'Max', 180, 'SliderStep', [1, 5] / (180), 'Value', 45,'Position', [2*uil uiy+uih-uis 3.7*uil-uis uih]);
uiy = uiy - uih - uis;
ui_pupil_legend = uicontrol(   'Parent', uitab_pupil, 'Style', 'text', 'Units', 'normalized', 'FontSize', ui_figures.fontsize_text, 'String', '',...
                               'Position', [2*uil uiy+uih-uis 3.8*uil-uis uih]);
                                                                       
uiy = uiy - uih - 2*uis;
                   uicontrol(   'Parent', uitab_pupil, 'Style', 'text', 'Units', 'normalized', 'HorizontalAlignment', 'left',...
                                'String', sprintf(t('Pupil Masking (%d x %dpx, 8bit Grayscale):'), 2^(ui_defaults.pupil_bits), 2^(ui_defaults.pupil_bits)),...
                                'Position', [uis uiy-0.3*uih 5*uil 2*uih],...
                                'FontSize', ui_figures.fontsize_text);
uiy = uiy - uih;
                    uicontrol(  'Parent', uitab_pupil, 'Style', 'text', 'Units', 'normalized', 'Value', 0, 'HorizontalAlignment', 'left',...
                                'String', t('Click and select to load. Click and cancel to remove.'),...
                                'FontSize', ui_figures.fontsize_text, 'ForegroundColor', ui_figures.fontcolor_secondary, 'Position', [uis, uiy+uih, 0.9, uih]);
                            
ui_load_pupil_mask = uicontrol( 'Parent', uitab_pupil, 'Style', 'pushbutton', 'Units', 'normalized',...
                                'String', t('None'), 'Position', [5*uis+5*uil uiy+1.8*uih 1.2*uil 1.2*uih],...
                                'FontSize', ui_figures.fontsize_text, 'BackgroundColor', ui_figures.bg_figure);
                            
%% PSF Tab

uiy = 1-2*uis-uih;
                    uicontrol(  'Parent', uitab_psf, 'Style', 'text', 'Units', 'normalized', 'HorizontalAlignment', 'left',...
                                'String', t('PSF cropping threshold:'), 'Position', [uis uiy-uis 4*uil uih],...
                                'FontSize', ui_figures.fontsize_text);
uiy = uiy - uih;
                    uicontrol(  'Parent', uitab_psf, 'Style', 'text', 'Units', 'normalized', 'Value', 0, 'HorizontalAlignment', 'left',...
                                'String', t('Higher number = tighter cropping (eliminates PSF "tails")'),...
                                'FontSize', ui_figures.fontsize_text, 'ForegroundColor', ui_figures.fontcolor_secondary, 'Position', [uis, uiy, 0.9, uih]);
                            
ui_psf_crop_threshold=uicontrol('Parent', uitab_psf, 'Style', 'edit', 'Units', 'normalized',...
                                'String', sprintf(['%',ui_defaults.float_precision,'f'], 0.5),...
                                'Position', [5*uis+5*uil uiy+uis 1.2*uil 1.5*uih],...
                                'FontSize', ui_figures.fontsize_text, 'BackgroundColor', ui_figures.bg_edit,...
                                'Callback', { @validate_double, 0.5 });

uiy = uiy - 1*uih - 4*uis;
ui_calculate_psf_go = uicontrol('Parent', uitab_psf, 'Style', 'checkbox', 'Units', 'normalized', 'Value', 0,...
                                'String', t('Use Geometrical Optics (Default: Fourier Optics)'),...
                                'FontSize', ui_figures.fontsize_text, 'Position', [uis, uiy, 0.9, uih]);                        
uiy = uiy - uih;
                    uicontrol(  'Parent', uitab_psf, 'Style', 'text', 'Units', 'normalized', 'Value', 0, 'HorizontalAlignment', 'left',...
                                'String', t('Experimental. Disregards the pupil settings except for the radius.'),...
                                'FontSize', ui_figures.fontsize_text, 'ForegroundColor', ui_figures.fontcolor_secondary, 'Position', [uis, uiy, 0.9, uih]);
                              
uiy = uiy - uih;                                                              
ui_rotate_chief_ray = uicontrol('Parent', uitab_psf, 'Style', 'checkbox', 'Units', 'normalized', 'Value', 1,...
                                'String', t('Align the chief ray with the Z-axis'),...
                                'FontSize', ui_figures.fontsize_text, 'Position', [uis, uiy, 0.9, uih]);
uiy = uiy - uih;                                                              
                    uicontrol(  'Parent', uitab_psf, 'Style', 'text', 'Units', 'normalized', 'Value', 0, 'HorizontalAlignment', 'left',...
                                'String', t('Removes the prism terms from the wavefront.'),...
                                'FontSize', ui_figures.fontsize_text, 'ForegroundColor', ui_figures.fontcolor_secondary, 'Position', [uis, uiy, 0.9, uih]);
                            
uiy = uiy - uih;                                                              
ui_correct_defocus = uicontrol( 'Parent', uitab_psf, 'Style', 'checkbox', 'Units', 'normalized', 'Value', 1,...
                                'String', t('Correct (zero) the C20 defocus term'),...
                                'FontSize', ui_figures.fontsize_text, 'Position', [uis, uiy, 0.9, uih]);
uiy = uiy - uih;                                                              
                    uicontrol(  'Parent', uitab_psf, 'Style', 'text', 'Units', 'normalized', 'Value', 0, 'HorizontalAlignment', 'left',...
                                'String', t('In previews only - to avoid defocus obscuring wavefront shape.'),...
                                'FontSize', ui_figures.fontsize_text, 'ForegroundColor', ui_figures.fontcolor_secondary, 'Position', [uis, uiy, 0.9, uih]);
                            
uiy = uiy - uih;                                                              
ui_psf_dont_crop =  uicontrol(  'Parent', uitab_psf, 'Style', 'checkbox', 'Units', 'normalized', 'Value', 0,...
                                'String', t('Don''t crop or center the PSF'),...
                                'FontSize', ui_figures.fontsize_text, 'Position', [uis, uiy, 0.9, uih]);
uiy = uiy - uih;                                                              
                    uicontrol(  'Parent', uitab_psf, 'Style', 'text', 'Units', 'normalized', 'Value', 0, 'HorizontalAlignment', 'left',...
                                'String', t('This can be useful for multi-focal or multi-PSF optics.'),...
                                'FontSize', ui_figures.fontsize_text, 'ForegroundColor', ui_figures.fontcolor_secondary, 'Position', [uis, uiy, 0.9, uih]);
                            
%% Polychromatic Tab

uiy = 1-2*uis-uih;

                    uicontrol(  'Parent', uitab_polypsf, 'Style', 'text', 'Units', 'normalized', 'HorizontalAlignment', 'left',...
                                'String', t('LCA Multiplier:'), 'Position', [uis uiy-uis 4*uil uih],...
                                'FontSize', ui_figures.fontsize_text);
uiy = uiy - uih;
                    uicontrol(  'Parent', uitab_polypsf, 'Style', 'text', 'Units', 'normalized', 'Value', 0, 'HorizontalAlignment', 'left',...
                                'String', t('Stretch or compress the Indiana Eye Model curve.'),...
                                'FontSize', ui_figures.fontsize_text, 'ForegroundColor', ui_figures.fontcolor_secondary, 'Position', [uis, uiy, 0.9, uih]);
                            
ui_lca_multiplier = uicontrol(  'Parent', uitab_polypsf, 'Style', 'edit', 'Units', 'normalized',...
                                'String', sprintf(['%',ui_defaults.float_precision,'f'], 1.0),...
                                'Position', [5*uis+5*uil uiy+uis 1.2*uil 1.5*uih],...
                                'FontSize', ui_figures.fontsize_text, 'BackgroundColor', ui_figures.bg_edit,...
                                'Callback', { @validate_double, 1.0 });
                            
uiy = uiy - uih - uis;
ui_poly_radios = uibuttongroup( 'Parent', uitab_polypsf, 'Position', [uis uiy 1-uis uih], 'Units', 'Normalized', 'BorderType', 'none');

ui_poly_mode_simple = uicontrol('Parent', ui_poly_radios, 'Style', 'radiobutton', 'Units', 'normalized',...
                                'String', t('Simple Mode (fast)'), 'Tag', 'Simple',...
                                'FontSize', ui_figures.fontsize_text, 'Position', [0 0 3*uil 1]);   
                            
ui_poly_mode_polypsf=uicontrol( 'Parent', ui_poly_radios, 'Style', 'radiobutton', 'Units', 'normalized', 'HorizontalAlignment', 'right',...
                                'String', t('Advanced Mode (accurate)'), 'Tag', 'PolyPSF',...
                                'FontSize', ui_figures.fontsize_text, 'Position', [1-3*uil 0 3*uil 1]);
                            
ui_include_vlambda= uicontrol(  'Parent', uitab_polypsf, 'Style', 'checkbox', 'Units', 'normalized', 'HorizontalAlignment', 'right',...
                                'String', t('Include V(lambda)'), 'Value', 1,...
                                'FontSize', ui_figures.fontsize_text, 'Position', [1-3*uil+0.5*uis uiy-uih 3*uil uih]);                       
                            
                            
                            
                            
uiy = uiy - uih - uis;                           
% Load a list of avaliable Spectral Power Distributions
[~, SPDs] = SPD();
dropdown_content = cell(length(SPDs),1); selected_dropdown = 1;
for i = 1:length(SPDs)
    dropdown_content{i} = sprintf('%s', SPDs{i});
end

uiy = uiy - uih - uis;

ui_spd_dropdown = uicontrol(   'Parent', uitab_polypsf, 'Style', 'popup', 'Units', 'normalized',...
                               'String', dropdown_content, 'Position', [1-uis-2*uil uiy 2*uil uih],...
                               'FontSize', ui_figures.fontsize_text);
                           
                  uicontrol(   'Parent', uitab_polypsf, 'Style', 'text', 'Units', 'normalized', 'HorizontalAlignment', 'right',...
                               'String', t('Source Radiance:'), 'Position', [1-2*uis-4.5*uil uiy 2.5*uil uih],...
                               'FontSize', ui_figures.fontsize_text);

ui_no_psfs =       uicontrol(   'Parent', uitab_polypsf, 'Style', 'edit', 'Units', 'normalized',...
                                'String', num2str(ui_defaults.no_psfs), 'Position', [2*uis+1.5*uil uiy 1.2*uil uih],...
                                'FontSize', ui_figures.fontsize_text, 'BackgroundColor', ui_figures.bg_edit);
                            
                   uicontrol(   'Parent', uitab_polypsf, 'Style', 'text', 'Units', 'normalized', 'HorizontalAlignment', 'left',...
                                'String', t('No. Samples:'), 'Position', [uis uiy 1.5*uil uih],...
                                'FontSize', ui_figures.fontsize_text);
                            
uiy = uiy - uih - uis;                 
uip_spd_preview = uipanel('Parent', uitab_polypsf, 'Units', 'normalized', 'Position', [uis 2*uis 1-2*uis uiy+2*uis]);
uip_spd_preview = subplot(1,1,1, 'Parent', uip_spd_preview, 'FontSize', ui_figures.fontsize_small);
plot_spd([], 1, uip_spd_preview, ui_no_psfs);
                     
%% Hidden Controls with settings

ui_pupil_bits = uicontrol(  'Parent', uitab_pupil, 'Style', 'text', 'Units', 'pixels', 'Visible', 'off',...
                            'String', num2str(ui_defaults.pupil_bits), 'Position', [0 0 1 1]);
% this will hold the raw target image data, used throughout the program
ui_target_image = uicontrol('Parent', uitab_image, 'Style', 'PushButton', 'Units','pixels',...
                            'position', [0 0 1 1], 'UserData', [], 'Visible', 'off');
% this will hold the raw original image data, used for reference                     
ui_original_image = uicontrol('Parent', uitab_image, 'Style', 'PushButton', 'Units','pixels',...
                            'position', [0 0 1 1], 'UserData', [], 'Visible', 'off'); 
% this will hold the pupil masking image data
ui_pupil_mask = uicontrol(  'Parent', uitab_pupil, 'Style', 'PushButton', 'Units', 'pixels',...
                            'position', [0 0 1 1], 'UserData', [], 'Visible', 'off');            
ui_image_pixsize= uicontrol('Parent', uitab_image, 'Style', 'edit', 'Units', 'pixels', 'Visible', 'off',...
                            'String', num2str(ui_defaults.pixsize), 'Position', [0 0 1 1]);

% this is getting crowded... is it all needed? cleanup!
ui_handles.uitab_ophtalmic = uitab_ophtalmic;
ui_handles.device_lambda = ui_device_lambda;
ui_handles.target_image = ui_target_image;
ui_handles.original_image = ui_original_image;
ui_handles.target_thumb = ui_target_thumb;
ui_handles.analysis_title = uitab_analysis;
ui_handles.pupil_radius = ui_pupil_radius;
ui_handles.pupil_radius_recalc = ui_pupil_radius_recalc;
ui_handles.propagate_Wxy = ui_propagate_Wxy;
ui_handles.zernike_rotation = ui_zernike_rotation;
ui_handles.zernike_translate_x = ui_translate_x;
ui_handles.zernike_translate_y = ui_translate_y;
ui_handles.analysis_from = ui_analysis_from;
ui_handles.from_txt = ui_from_txt;
ui_handles.analysis_to = ui_analysis_to;
ui_handles.to_txt = ui_to_txt;
ui_handles.analysis_offset = ui_analysis_offset;
ui_handles.analysis_steps = ui_analysis_steps;
ui_handles.image_pixels = ui_image_pixels;
ui_handles.image_arcmins = ui_image_arcmins;
ui_handles.image_pixsize = ui_image_pixsize;
ui_handles.image_dimensions = ui_image_dimensions;
ui_handles.pupil_rotation = ui_pupil_rotation;
ui_handles.pupil_ellipticity = ui_pupil_ellipticity;
ui_handles.pupil_sce = ui_pupil_sce;
ui_handles.pupil_bits = ui_pupil_bits;
ui_handles.pupil_mask = ui_pupil_mask;
ui_handles.load_pupil_mask = ui_load_pupil_mask;
ui_handles.pupil_preview = ui_pupil_preview;
ui_handles.pupil_legend = ui_pupil_legend;
ui_handles.zernike_source = ui_zernike_source;
ui_handles.calculated_pixsize = ui_calculated_pixsize;
ui_handles.calculate_psf_go = ui_calculate_psf_go;
ui_handles.progress_bar = ui_progress_bar;
ui_handles.rotate_chief_ray = ui_rotate_chief_ray;
ui_handles.correct_defocus = ui_correct_defocus;
ui_handles.psf_crop_threshold = ui_psf_crop_threshold;
ui_handles.psf_dont_crop = ui_psf_dont_crop;
ui_handles.lca_multiplier = ui_lca_multiplier;
ui_handles.include_vlambda = ui_include_vlambda;

ui_handles.poly_mode_simple = ui_poly_mode_simple;
ui_handles.poly_mode_polypsf= ui_poly_mode_polypsf;
ui_handles.mode_single = ui_mode_single;
ui_handles.mode_through= ui_mode_through;
ui_handles.no_psfs = ui_no_psfs;
ui_handles.spd_dropdown = ui_spd_dropdown;

ui_handles.rx_sphere = ui_rx_sphere;
ui_handles.rx_spherical_eq = ui_rx_spherical_eq;
ui_handles.rx_cylinder = ui_rx_cylinder;
ui_handles.rx_cylinder_axis = ui_rx_cylinder_axis;
ui_handles.rx_coma = ui_rx_coma;
ui_handles.rx_coma_axis = ui_rx_coma_axis;
ui_handles.rx_spherical = ui_rx_spherical;
ui_handles.rx_M = ui_rx_M;
ui_handles.rx_J0 = ui_rx_J0;
ui_handles.rx_J45 = ui_rx_J45;
ui_handles.rx_mtr_eq = ui_rx_mtr_eq;
ui_handles.wavefront_rms = ui_wavefront_rms;
ui_handles.zernike_bars = uip_zernike_bars;

ui_handles.add_Wxy_radius = ui_add_Wxy_radius;
ui_handles.add_Wxy_scale = ui_add_Wxy_scale;
ui_handles.add_Wxy_lambda = ui_add_Wxy_lambda;
ui_handles.add_Wxy = uip_add_Wxy;

ui_handles.batch_filelist = ui_batch_filelist;
ui_handles.batch_switch = ui_batch_switch;
ui_handles.batch_recalc = ui_batch_recalc;
ui_handles.batch_radius = ui_batch_radius;
ui_handles.batch_source = ui_batch_source;
ui_handles.batch_lambda = ui_batch_lambda;

ui_handles.generate_normal = ui_generate_normal;
ui_handles.generate_queratoconic = ui_generate_queratoconic;
set(ui_generate_normal, 'Value', 1);

setappdata(cf, 'ui_handles', ui_handles);
   
set(ui_launch_mtf, 'Callback', { @launch_analysis, 'mtf'});
set(ui_launch_iqm, 'Callback', { @launch_analysis, 'iqm'});
set(ui_launch_sim, 'Callback', { @launch_analysis, 'sim'});

set(ui_import_zernikes,     'Callback', { @import_zernikes });
set(ui_importadd_zernikes,  'Callback', { @import_zernikes, 'add' });
set(ui_batch_import,        'Callback', { @verify_batch });
set(ui_export_zernikes,     'Callback', { @export_zernikes });
set(ui_generate_zernikes,   'Callback', { @generate_zernikes });
set(ui_copy_zernikes,       'Callback', { @copy_zernikes });
set(ui_reset_zernikes,      'Callback', { @reset_zernikes });
set(ui_recalc_zernikes,     'Callback', { @recalc_zernikes });
set(ui_divide_zernikes,     'Callback', { @divide_zernikes, ui_divide_zernikes_by });
set(ui_pupil_rotation,      'Callback', { @pupil_preview });
set(ui_pupil_ellipticity,   'Callback', { @pupil_preview });
set(ui_analysis_from,       'Callback', { @pupil_preview });
set(ui_analysis_to,         'Callback', { @pupil_preview });
set(ui_load_pupil_mask,     'Callback', { @load_pupil_mask });
set(ui_target_thumb,        'Callback', { @load_target_image });
set(ui_calc_pixsize,        'Callback', { @calc_pixsize });
set(ui_calc_opthalmic,      'Callback', { @calc_opthalmic });
set(ui_calc_quickview,      'Callback', { @analysis_quickview });
set(ui_settings_btn,        'Callback', { @settings_dialog });
set(ui_import_btn,          'Callback', { @import_analyses, cf });
set(ui_spd_dropdown,        'Callback', { @plot_spd, uip_spd_preview, ui_no_psfs });
set(ui_no_psfs,             'Callback', { @update_spd, ui_spd_dropdown, uip_spd_preview, ui_defaults.no_psfs });
set(ui_load_add_Wxy,        'Callback', { @load_additional_wavefront, cf });
set(ui_reset_add_Wxy,       'Callback', { @reset_additional_wavefront, cf });
set(ui_update_add_Wxy,      'Callback', { @update_additional_wavefront, cf });

load_target_image([], [], cf);
% ~~~~~~~~~~~~~~~~~
generate_zernikes_pyramid(cf, ui_defaults.initial_zernikes); % this is also called from import_zenikes.m and reset_zernikes.m and is cool
% ~~~~~~~~~~~~~~~~~
update_additional_wavefront([],[], cf);

set(uitabs_top,     'SelectionChangedFcn', { @set_target_image, cf });
set(ui_radiogroup,  'SelectionChangeFcn',  { @change_selected_zernike, ui_handles });

pupil_preview([], [], cf);
analysis_quickview( [], [], cf );
calc_opthalmic( [], [], cf );
show_progress(ui_handles.progress_bar, 0);

% show some luv :3       
                  uicontrol('Parent', cf, 'Style', 'text', 'Units', 'normalized', 'HorizontalAlignment', 'center', 'BackgroundColor', ui_figures.bg_figure,...
                            'String', is_footer, 'Position', [0.025 0.0125 0.95 0.025], 'FontSize', ui_figures.fontsize_text, 'ForegroundColor', 0.6*ui_figures.bg_figure);
                        