function [ci, meanx, lo, hi]=confidence(x,dim,alpha,flag)% CONFIDENCE - compute univariate confidence interval for mean of elements of x, along dimension dim.%% usage: [ci, meanx, lo, hi]=confidence(x,dim,alpha,flag)%% input: % 	x = data matrix.  repeated values for given variable can be in rows or cols or slices, etc.%	dim = dimension along which the confidence interval is to be determined%	alpha = level of 2-sided t-test used to construct the confidence interval%	flag = switch to compute confidence interval for mean (default, flag=1) or probability interval for individual data (flag=0)%% output:%	ci = vector of 1-alpha confidence interval magnitudes to be added to, or subtracted from, mean value%	meanx = vector of mean values determined along dimension dim%	lo = vector of mean - ci = low end of interval% 	hi = vector of mean + ci = high end of interval%% LNT April 2002 (?).  Documented 26Dec02.if nargin < 4, flag = 1; end	% default is to compute confidence interval for meanif nargin < 3, alpha = 0.05; end	% default is 95% confidence limit (prob(x>hi) = 2.5% = prob(x<lo)if nargin < 2,   % Determine which dimension SUM will use  dim = min(find(size(x)~=1));  if isempty(dim), dim = 1; endenddim;df = size(x,dim) - 1;meanx = mean(x,dim); if flag 	s = sem(x,dim);			% user wants confidence interval for meanelse	s = std(x,0,dim);		% user wants probability interval for individual dataendt = tinv(1-alpha/2,df); 	% tinv returns 1-sided prob, but CI is two-sidedci=t*s; 					% 1-alpha confidence interval for mean valuelo = meanx - ci;hi = meanx + ci;