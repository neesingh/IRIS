% ui_value - whether or not the metric is enabled by default,
% args - any args required by a particular metric other than the full analysis structure that they receive anyway

% the calculate_iq function is executed by callback and receives the
% following arguments: a - analysis, args - defined here, cf - main figure handle
% this script itself is included in analysis_iq_metrics.m, so it has access
% to all of the variables in that scope.

iqmetrics = {     struct(   'name', 'IS (1) SR: Strehl Ratio',...
                            'ui_name', 'ui_vsr', 'ui_value', 1, 'args', s,...
                            'calculate_iq', { @iqm_vsr }),...
                  struct(   'name', 'IS (2) VSX: Visual Strehl Ratio computed in space domain',...
                            'ui_name', 'ui_vsx', 'ui_value', 0, 'args', s,...
                            'calculate_iq', { @iqm_vsx }),...
                  struct(   'name', 'IS (3) LIB: Light in the Bucket',...
                            'ui_name', 'ui_lib', 'ui_value', 0, 'args', s,...
                            'calculate_iq', { @iqm_lib }),...
                  struct(   'name', 'IS (4) AVd: Decimal Visual Acuity',...
                            'ui_name', 'ui_isva', 'ui_value', 0, 'args', s,...
                            'calculate_iq', { @iqm_isva }),...
                  struct(   'name', 'IS (5) logMAR: Visual Acuity',...
                            'ui_name', 'ui_islogmar', 'ui_value', 0, 'args', [],...
                            'calculate_iq', { @iqm_islogmar }),...
                  struct(   'name', 'IS (6) Simulated Image Cross Correlation',...
                            'ui_name', 'ui_xcorr', 'ui_value', 0, 'args', [],...
                            'calculate_iq', { @iqm_xcorr }),...
                  struct(   'name', 'IS (7) minRMS Spherical Equivalent [Dioptres]',...
                            'ui_name', 'ui_minRMS', 'ui_value', 0, 'args', s,...
                            'calculate_iq', { @iqm_minRMS }),...
                  struct(   'name', 'IS (8) Paraxial Spherical Equivalent [Dioptres]',...
                            'ui_name', 'ui_parax', 'ui_value', 0, 'args', s,...
                            'calculate_iq', { @iqm_parax }),...
                  struct(   'name', 'IS (9) MTR Spherical Equivalent [Dioptres]',...
                            'ui_name', 'ui_mtr', 'ui_value', 0, 'args', s,...
                            'calculate_iq', { @iqm_mtr }),...
                  struct(   'name', 'IS (10) Radially Averaged MTF at 15 cyc/deg',...
                            'ui_name', 'ui_mtf15cpd', 'ui_value', 0, 'args', s,...
                            'calculate_iq', { @iqm_mtf15cpd }),...
                  struct(   'name', 'IS (11) Radially Averaged MTF at 30 cyc/deg',...
                            'ui_name', 'ui_mtf30cpd', 'ui_value', 0, 'args', s,...
                            'calculate_iq', { @iqm_mtf30cpd })};
                        
       if(false)
                      struct(   'name', 'IS (5) MTF at 50 cyc/deg',...
                                'ui_name', 'ui_mtf50cpd', 'ui_value', 0, 'args', s,...
                                'calculate_iq', { @iqm_mtf50cpd }),...
                      struct(   'name', '======== LEGACY IQ METRICS FROM THE FOC ========', 'enabled', 'off',...
                                'ui_name', 'ui_dummy', 'ui_value', 0, 'args', [],...
                                'calculate_iq', { @iqm_dummy }),...
                      struct(   'name', 'OTF(1) SFcMTF: SFcutoff for rMTF',...
                                'ui_name', 'ui_OTF1', 'ui_value', 0, 'args', 1,...
                                'calculate_iq', { @iqm_foc_OTF }),...
                      struct(   'name', 'OTF(2) AreaMTF: area of visibility for rMTF (error?)',...
                                'ui_name', 'ui_OTF2', 'ui_value', 0, 'args', 2,...
                                'calculate_iq', { @iqm_foc_OTF }),...
                      struct(   'name', 'OTF(3) SFcOTF: SFcutoff for rOTF',...
                                'ui_name', 'ui_OTF3', 'ui_value', 0, 'args', 3,...
                                'calculate_iq', { @iqm_foc_OTF }),...
                      struct(   'name', 'OTF(4) AreaOTF: area of visibility for rOTF (error?)',...
                                'ui_name', 'ui_OTF4', 'ui_value', 0, 'args', 4,...
                                'calculate_iq', { @iqm_foc_OTF }),...
                      struct(   'name', 'OTF(5) SROTF Strehl Ratio by OTF',...
                                'ui_name', 'ui_OTF5', 'ui_value', 0, 'args', 5,...
                                'calculate_iq', { @iqm_foc_OTF }),...
                      struct(   'name', 'OTF(6) VOTF: vol. OTF/ vol. MTF',...
                                'ui_name', 'ui_OTF6', 'ui_value', 0, 'args', 6,...
                                'calculate_iq', { @iqm_foc_OTF }),...
                      struct(   'name', 'OTF(7) VSOTF Visual Strehl Ratio by OTF',...
                                'ui_name', 'ui_OTF7', 'ui_value', 0, 'args', 7,...
                                'calculate_iq', { @iqm_foc_OTF }),...
                      struct(   'name', 'OTF(8) VNOTF: vol. nCS-weighted OTF / MTF',...
                                'ui_name', 'ui_OTF8', 'ui_value', 0, 'args', 8,...
                                'calculate_iq', { @iqm_foc_OTF }),...
                      struct(   'name', 'OTF(9) SRMTF: Strehl Ratio by MTF method',...
                                'ui_name', 'ui_OTF9', 'ui_value', 0, 'args', 9,...
                                'calculate_iq', { @iqm_foc_OTF }),...
                      struct(   'name', 'OTF(10) VSMTF: Visual Strehl Ratio by MTF',...
                                'ui_name', 'ui_OTF10', 'ui_value', 0, 'args', 10,...
                                'calculate_iq', { @iqm_foc_OTF }),...
                          struct(   'name', 'WAV(1) RMSw: RMS of wavefront error',...
                                    'ui_name', 'ui_Wave1', 'ui_value', 0, 'args', 1,...
                                    'calculate_iq', { @iqm_foc_Wave }),...
                          struct(   'name', 'WAV(2) PV: peak-to-valley difference',...
                                    'ui_name', 'ui_Wave2', 'ui_value', 0, 'args', 2,...
                                    'calculate_iq', { @iqm_foc_Wave }),...
                          struct(   'name', 'WAV(3) RMSs: (i.e. std) of wavefront slope',...
                                    'ui_name', 'ui_Wave3', 'ui_value', 0, 'args', 3,...
                                    'calculate_iq', { @iqm_foc_Wave }),...
                          struct(   'name', 'WAV(4) PFWc: Marechal, RMS(wavefront) < criterion',...
                                    'ui_name', 'ui_Wave4', 'ui_value', 0, 'args', 4,...
                                    'calculate_iq', { @iqm_foc_Wave }),...
                          struct(   'name', 'WAV(5) PFWt: Rayleigh, abs. WFE < criterion',...
                                    'ui_name', 'ui_Wave5', 'ui_value', 0, 'args', 5,...
                                    'calculate_iq', { @iqm_foc_Wave }),...
                          struct(   'name', 'WAV(6) PFSt: Rayleigh Klein-type, mag. of slope < criterion',...
                                    'ui_name', 'ui_Wave6', 'ui_value', 0, 'args', 6,...
                                    'calculate_iq', { @iqm_foc_Wave }),...
                          struct(   'name', 'WAV(7) PFSc: Marechal, RMS(slope) < criterion',...
                                    'ui_name', 'ui_Wave7', 'ui_value', 0, 'args', 7,...
                                    'calculate_iq', { @iqm_foc_Wave }),... 
                          struct(   'name', 'WAV(8) Bave: mean blur strength of wavefront',...
                                    'ui_name', 'ui_Wave8', 'ui_value', 0, 'args', 8,...
                                    'calculate_iq', { @iqm_foc_Wave }),...
                          struct(   'name', 'WAV(9) PFCt: Rayleigh, wavefront curvature (blur strength) (error?)',...
                                    'ui_name', 'ui_Wave9', 'ui_value', 0, 'args', 9,...
                                    'calculate_iq', { @iqm_foc_Wave }),...
                          struct(   'name', 'WAV(10) PFCc: Marechal, wavefront curvature (blur strength) (error?)',...
                                    'ui_name', 'ui_Wave10', 'ui_value', 0, 'args', 10,...
                                    'calculate_iq', { @iqm_foc_Wave }),...    
                              struct(   'name', 'PSF(1) Diam. of area centered on 50% energy peak',...
                                        'ui_name', 'ui_PSF1', 'ui_value', 0, 'args', 1,...
                                        'calculate_iq', { @iqm_foc_PSF }),...
                              struct(   'name', 'PSF(2) Equivalent width of centered PSF',...
                                        'ui_name', 'ui_PSF2', 'ui_value', 0, 'args', 2,...
                                        'calculate_iq', { @iqm_foc_PSF }),...
                              struct(   'name', 'PSF(3) Sqrt(second moment of light distribution)',...
                                        'ui_name', 'ui_PSF3', 'ui_value', 0, 'args', 3,...
                                        'calculate_iq', { @iqm_foc_PSF }),...
                              struct(   'name', 'PSF(5) Correlation width of light distribution',...
                                        'ui_name', 'ui_PSF5', 'ui_value', 0, 'args', 5,...
                                        'calculate_iq', { @iqm_foc_PSF }),...
                              struct(   'name', 'PSF(6) Strehl Ratio',...
                                        'ui_name', 'ui_PSF6', 'ui_value', 0, 'args', 6,...
                                        'calculate_iq', { @iqm_foc_PSF }),...
                              struct(   'name', 'PSF(7) Light-in-the-bucket ',...
                                        'ui_name', 'ui_PSF7', 'ui_value', 0, 'args', 7,...
                                        'calculate_iq', { @iqm_foc_PSF }),... 
                              struct(   'name', 'PSF(8) Standard deviation of light distribution',...
                                        'ui_name', 'ui_PSF8', 'ui_value', 0, 'args', 8,...
                                        'calculate_iq', { @iqm_foc_PSF }),...
                              struct(   'name', 'PSF(10) Neural blur (i.e. visual strength)',...
                                        'ui_name', 'ui_PSF10', 'ui_value', 0, 'args', 10,...
                                        'calculate_iq', { @iqm_foc_PSF }),...    
                              struct(   'name', 'PSF(11) Campbell & Green VSR in space domain (neural PSF)',...
                                        'ui_name', 'ui_PSF11', 'ui_value', 0, 'args', 11,...
                                        'calculate_iq', { @iqm_foc_PSF })                 
            %};     
       end
