function [X,Y,PSF,r,LSF,radius,rPSF,XI,F] = AiryPattern2D(PupilDia,...    lambda, s, showit, norm, center)% AiryPattern2D - intensity PSF for perfect optical system, circular pupil%% Syntax: [X,Y,PSF,r,LSF,radius,rPSF,XI,F] = AiryPattern2D(PupilDia,...%           lambda, s, showit,norm,center);%% Input variables:%	PupilDia = pupil diameter;  default = 3 mm%	lambda = wavelength of light;  default = 0.6328e-3 mm%   Note:  units for PupilDia and lambda must be the same%	s = vector of Cartesian sample locations in normalized coordinates.  %		default = [-2:0.1:2].%	showit = graphics flag (1=show graph, 0=don't show); default = 1%	norm = normalization method. norm=0  =>central value = 1 (default). %		norm=1  => sum of PSF values = 1 (to be compatible with max(OTF)=1)%   center = 1x2 vector [xcenter,ycenter] specifying center of Airy's disk%% Output variables:%	X,Y = angular meshgrid support for Airy disk pattern (in arcmin)%   PSF = intensity values of the 2-dimensional Airy pattern%	r = radial distance vector for LSF (in arcmin)%	LSF = line-spread function%	radius = radial distance vector for rPSF%	rPSF = radial-average point-spread function%	XI = uniformly spaced x-vector for interpolating rPSF%   F = radial average PSF interpolated onto sampling points in XI%% Graphical output:  4 part figure (2D PSF (2 ways), LSF, PSFr)%   Note that LSF and rPSF are not too useful for decentered PSFs%% Method:%   Analytical solution uses a damped Bessel function 2J1(pi.s)/(pi.s)%   evaluated by Gaskill's somb2d function in normalized coordinates.%   Somb crosses zero at s=1.22, so s must be scaled by lambda/diameter to%   convert PSF coordinates into physical units (radians).%   AiryPattern2D performs this conversion and generates some useful %   graphical displays of the results. %% Testing: %   Call the function without input parameters to invoke default parameters%   that set up a known case for visual inspection & verification.  %% Comments:%   Execute AiryPattern2D with no arguments to see a demonstration.%	physical distance in pupil plane = s/*cutoff frequency, where%     cutoff_freq=pupil_dia/lambda (cyc/rad). First zero occurs at%	  s = 1.22, or x = 1.22/cutoff = 1.22*lambda/pupil_dia (radians)%	  Example:  for lambda=0.633*1e-3, PupilDia=6, cutoff=165c/d, and first%	  zero crossing occurs as x = 1.22*0.633*1e-3/6 radians = 0.44arcmin%% See also: somb2d, somb, RadialAverage.%% Change history:%  LNT 23-May-2001.%  LNT 13-July-2011. Add input parameter "center" and expand documentation.%% setup default valuesif nargin < 1 || isempty(PupilDia), PupilDia= 3.0;	end % mmif nargin < 2 || isempty(lambda), lambda = 0.6328e-3; end  % mmif nargin < 3 || isempty(s), s=[-2:0.1:2]; end	% normalized unitsif nargin < 4 || isempty(showit), showit = 1; end  % show the graphsif nargin < 5 || isempty(norm), norm = 0; end  % central PSF value = 1 if nargin < 6 || isempty(center), center = [0 0]; end%% compute the 2-D PSF[Z,A,B] = somb2d(s,s,center);	PSF=Z.^2;   % square the amplitude distribution to get intensityif norm==1	PSFvol=sum(sum(PSF));	disp(['Airy volume= ', num2str(PSFvol)]);	PSF = PSF/PSFvol;endX = A*(lambda/PupilDia)*(180/pi)*60;	% spatial meshgrid in arcminY = B*(lambda/PupilDia)*(180/pi)*60;	% spatial meshgrid in arcmin%% compute the line-spread function = marginal of light distributionLSF = sum(PSF);	% sum vertically to get a horizontal lsfr = X(1,:);		% corresponding x-values%% for sake of completeness, compute radial average PSF[radius, rPSF, XI,F] = RadialAverage(PSF,X,Y); % use all 360 degtheory = somb(s).^2;if norm==1	theory = theory/PSFvol;enddisp(['max(rPSF)= ', num2str(max(rPSF))]);%% Graphicsif showit    figure; surf (A,B,PSF); view(0,90); axis square, colormap gray	xlabel('x-value (normalized)');	ylabel('y-value (normalized)');	title(['PSF, ',num2str(PupilDia),' mm pupil diameter']);    	figure; 	subplot(2,2,1); imagesc (A(1,:),B(:,1),PSF);     colorbar, axis xy, axis square	xlabel('x-value (normalized)');	ylabel('y-value (normalized)');	zlabel('Intensity');	title('2D PSF');	subplot(2,2,2); surf (X,Y,PSF); 	xlabel('x-Visual Angle (arcmin)');	ylabel('y-Visual Angle (arcmin)');	zlabel('Intensity');	title('2D PSF');	subplot(2,2,3); bar(r,LSF,'r');	hold on	% best to think of LSF as a histogram, like a pdf	plot(r,LSF,'g-o',X(1,:),theory,'b-')	xlabel('Visual Angle (arcmin)');	ylabel('Intensity');	title('Line-spread Function');	legend('LSF=Marginal of somb2D','Replot LSF','Central profile of 2D-PSF')	subplot(2,2,4); plot(X(1,:),theory,'b-',radius,rPSF,'ro', XI,F,'ks')	xlabel('Visual Angle (arcmin)');	ylabel('Intensity');	title('Radial Point-Spread Function');	legend('Central profile of 2D-PSF','Radial ave =rPSF', 'Interpolated rPSF');end