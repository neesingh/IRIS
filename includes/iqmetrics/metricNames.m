function [txt,numberMetrics,acronym,IDacronym,ID2acronym]=metricNames% metricNames -  string labels for 31 metrics of optical quality % norm means normalized to diffraction-limited example% note that all PS & SF metrics could be normalized to DL case if desired.% so far, I've only normalized those metrics for which results are not easy to interpret%% syntax: [txt,numberMetrics,acronym,IDacronym,ID2acronym]=metricNames%% output variables:%   txt - a cell array with long descriptions of the metrics%   numberMetrics - a 1x3 vector of the number of metrics in 3 categores: %       wavefront, spatial, or frequency domains%   acronym - a cell array with short names of metrics%   IDacronym - acronyms for Method 1%   ID2acronym - acronyms for Method 2%% LNT 25 Nov 02.  % LNT 30 Nov 02.  Exchange metrics PS(1) and PS(8) so grouping is more logical.% LMT 15 Apr 03.  Add PS(11) = visual strehl calculated in space domain, %	SF(9) = Strehl (MTF), and SF(10) = Visual Strehl (MTF),%	WF(7) = RMSc = sd(curvature), WF(8) = PFc (curvature)%  WF 7, 8 are not entirely satisfactory yet since they depend soley on del2.% LNT 27jun03.  Add numberMetrics as output for benefit of thruFocusImageQ.m% LNT 26Aug03.  Modify acronyms to match the AO manual chapter.% LNT 19Sep06. Add acronyms for image degradation (ID) versions of metrics% LNT 21Oct06. Add acronyms for 2nd version of image degradation metrics% % © 2003 Larry Thibos, Indiana UniversitynumberMetrics = [10,11,10];	% vector specifying the number of metrics in each classtxt={'WF(1) = RMSw: std(OPD)''WF(2) = PV: peak-valley''WF(3) = RMSs: std(slope)''WF(4) = PFWc: pupil fraction for wavefront (critical pupil)''WF(5) = PFWt: pupil fraction for wavefront (tessellation)''WF(6) = PFSt: pupil fraction for slope (tessellation)''WF(7) = PFSc: pupil fraction for slope (critical pupil)''WF(8) = Bave: average Blur Strength''WF(9) = PFCt: pupil fraction for curvature (tessellation)''WF(10) = PFCc: pupil fraction for curvature (critical pupil)''PS(1) = D50: 50% width (min)''PS(2) = EW: equivalent width (min)''PS(3) = SM: sqrt(2nd moment) (min)''PS(4) = HWHH: half width at half height (arcmin)''PS(5) = CW: correlation width (min)''PS(6) = SRX: Strehl ratio in space domain''PS(7) = LIB: light in the bucket (norm)''PS(8) = STD: standard deviation of intensity (norm)''PS(9) = ENT: entropy (bits)''PS(10) = NS: neural sharpness (norm)''PS(11) = VSX: visual Strehl in space domain''SF(1) = SFcMTF: cutoff spat. freq. for rMTF (c/d)''SF(2) = AreaMTF: area of visibility for rMTF (norm)''SF(3) = SFcOTF: cutoff spat. freq. for rOTF (c/d)''SF(4) = AreaOTF: area of visibility for rOTF (norm)''SF(5) = SROTF: Strehl ratio for OTF''SF(6) = VOTF: OTF vol/ MTF vol''SF(7) = VSOTF: visual Strehl ratio for OTF''SF(8) = VNOTF: CS*OTF vol/ CS*MTF vol''SF(9) = SRMTF: Strehl ratio for MTF''SF(10) = VSMTF: visual Strehl ratio for MTF'};acronym={'RMSw''PV''RMSs''PFWc''PFWt''PFSt''PFSc''Bave''PFCt''PFCc''D50''EW''SM''HWHH''CW''SRX''LIB''STD''ENT''NS''VSX''SFcMTF''AreaMTF''SFcOTF''AreaOTF''SROTF''VOTF''VSOTF''VNOTF''SRMTF''VSMTF'};IDacronym={'RMSw''PV''RMSs''1-PFWc''1-PFWt''1-PFSt''1-PFSc''Bave''1-PFCt''1-PFCc''D50''EW''SM''HWHH''CW''1-SRX''1-LIB''1-STD''ENT''1-NS''1-VSX''1/SFcMTF''1-AreaMTF''1/SFcOTF''1-AreaOTF''1-SROTF''1-VOTF''1-VSOTF''1-VNOTF''1-SRMTF''1-VSMTF'};ID2acronym={'RMSw''PV''RMSs''-log(PFWc)''-log(PFWt)''-log(PFSt)''-log(PFSc)''Bave''-log(PFCt)''-log(PFCc)''D50''EW''SM''HWHH''CW''-log(SRX)''-log(LIB)''-log(STD)''ENT''-log(NS)''-log(VSX)''1/SFcMTF''-log(AreaMTF)''1/SFcOTF''-log(AreaOTF)''-log(SROTF)''-log(VOTF)''-log(VSOTF)''-log(VNOTF)''-log(SRMTF)''-log(VSMTF)'};