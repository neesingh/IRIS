%QualityvsZc - script to determine how quality metrics vary with amount of aberration% Note: must run this program for every pupil size (or wavelength) of interest.% Result is a calibration matrix R - each row is a Z value, each col is a metric, each slice is a mode% LNT 24 Nov 02. clear all, close alllambda = 0.633e-6;	% mPupilDia = 6e-3; % mexample = 1switch examplecase 1% case #1:  all metrics apear to have even symmetry, so interleave +/- values of Zc% v=[-0.95:0.1:-0.05, 0:0.1:1]; 		% values of aberration coeffs to evaluatev=[0:0.05:2]; 							% values of aberration coeffs to evaluate% mode = 3:20;							% OSA mode numbers to evalueate (omit prism, piston)% Results computed on 26Nov02 indicate that +f and -f give same answer, so just do +f in the futuremode = [4,5,8,9,12,13,14,18,19,20];		% OSA mode numbers to evaluate (omit prism, piston)%mode=3showit = 0;%doit=zeros(10,3); doit(1:4,3)=1; % repeat calculation of cutoff SF and area of visibility.for OSAmode = mode	% cycle through Zernike modes one at a time. requires 4 min/mode	tic	disp(['OSA mode # ',num2str(OSAmode)])	vmode = OSAmode+1;					% Matlab mode = OSA mode + 1	Zc=zeros(1,21); 	j=0;	for d=v 		% cycle through the specified values of given aberration mode		disp(['Z coeff = ',num2str(d)])		j=j+1;		Zc(vmode)=d; 		[WF,PS,SF]=QualityMetrics(Zc,PupilDia,lambda,[],[0,0,1],doit);  		R(j,:,OSAmode) = [WF,PS,SF]; % each row is a Z value, each col is a metric, each slice is a mode	end	tocendR(:,:,3)=R(:,:,5);	% duplicate astigmatism resultR(:,:,7)=R(:,:,8);	% duplicate coma resultR(:,:,6)=R(:,:,9);	% duplicate trefoil resultR(:,:,11)=R(:,:,13);% duplicate secondary astigmatism resultR(:,:,10)=R(:,:,14);% duplicate quadrafoil resultR(:,:,17)=R(:,:,18);% duplicate secondary coma resultR(:,:,16)=R(:,:,19);% duplicate secondary trefoil resultR(:,:,15)=R(:,:,20);% duplicate quintafoil result% graph the resultstxt=metricNames;[r,c,s]=size(R);	% row=value of Zc, col=value of metric, slice=OSAmode#for OSAmode = 3:s	% make a 24-part graph for each Z-mode	figure;	for metric=1:c 		% for each metric, plot the value of metric as a function of Z coeff value		subplot(6,4,metric)		plot(abs(v),log10(R(:,metric,OSAmode)),'b-')% 		title(['Metric ',num2str(metric),'; OSA mode ',num2str(OSAmode)])		title(txt(metric))	end%	subplot(6,4,1), ylabel(['Q for OSA mode ',num2str(OSAmode)])%	subplot(6,4,21), xlabel('Zc value (microns)'), ylabel('log Optical Quality')end% Q=R(:,17:20,:); save QQ Q% clear all, load QvsZc6mm.mat, load QQ, R(:,17:20,:)=QQ; save QvsZ6mm PS PupilDia R lambda txt v%% 30 Nov - correct previoulsy saved matrix for change in convention for listing PS metrics% clear all, load QvsZ6mmNov29.mat, load QQ, RR=R; Y1=RR(:,7,:); Y8=RR(:,14,:); % R(:,7,:)=Y8;	R(:,14,:)=Y1;% save QvsZ6mm PS PupilDia R lambda txt v% save QvsZc6mm	% second version has larger range of Z-values, only +f. %% Note that results are for 6mm pupil only.  Must execute this program again for other pupil sizes.end