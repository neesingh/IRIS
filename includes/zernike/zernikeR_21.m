function Z = zernikeR_21(x,y,pd)%ZernikeR   Evaluate Zernike circle polynomial of modes 1-66 for sample points%			specified in RECTANGULAR coordinates.%%  Use: Z = zernikeR(x,y,pd)%%	Z=zernike(x,y,pd) returns matrix Z filled with samples of the Zernike %	polynomials for all mode up to N=66 (10th order). %%	NOTE: This version exchanges x&y in Malacara's formulas in order to obey % 	the standard mathematical convention that x=r*cos(theta), y=r*sin(theta).%	Equations were generated automatically by Make_N_OrdersR. %%	Input arguments:%		x,y are scalars, vectors, or matrices specifying the sample points  %		  upon which the Zernike functions are to be evaluated.%		x and y must be normalised coordinates inside the unit circle.%	%		pd is optional. Valid values of pd are 'dx' or 'dy' or 'h'%		  'dx' evaluates the partial derivative of the Zernike with respect to x%	 	  'dy' evaluates the partial derivative of the Zernike with respect to y%		  'h' evaluates the surface height (i.e. same as if pd were omitted)%%	Output Z is a vector or matrix of the same size as x and y.%%	LNT 8-Mar-98. Do orders 0-5.  %	LNT 9-Mar-98  Add orders 6-10.%	LNT 9-Mar-98. Redo the lot, this time with normalization constants included.%					The result should be a set of orthonormal functions.%	LNT 14-Mar-98  Redo the lot, with numbering scheme: mode 1= constant (piston).%	KMH 6-Mar-2000  Calc all 66 modes, remove n as input arg. Calc all powers%                   x^n, y^n at the beginning, and replace power calls x^n, y^n %                   in later code with x_n and y_n respectively.%% © 1998 Larry Thibos, 2000 Kevin Haggerty, Indiana Universitynarginchk(2,3);if nargin==3,	pd=lower(pd);	if  pd~='dx' & pd~='dy' & pd~='h'	error('Only valid values for pd are dx, dy, and h.');	endendif size(x)~=size(y)	error('x and y must have the same size.'); endx_2 = x.^2;x_3 = x.^3;x_4 = x.^4;x_5 = x.^5;y_2 = y.^2;y_3 = y.^3;y_4 = y.^4;y_5 = y.^5;Z = zeros(size(x,1), size(x,2), 21);if nargin==2 | pd=='h'Z(:,:,1)= ones(size(x));                                                                          Z(:,:,2)=sqrt(2*(1+1))*( +1.*y);                                                                       Z(:,:,3)=sqrt(2*(1+1))*( +1.*x);                                                                       Z(:,:,4)=sqrt(2*(2+1))*( +2.*x.*y);                                                                    Z(:,:,5)=sqrt(2+1)*( +2.*x_2 +2.*y_2 -1);                                                            Z(:,:,6)=sqrt(2*(2+1))*( +1.*x_2 -1.*y_2);                                                           Z(:,:,7)=sqrt(2*(3+1))*( +3.*x_2.*y -1.*y_3);                                                        Z(:,:,8)=sqrt(2*(3+1))*( +3.*x_2.*y +3.*y_3 -2.*y);                                                  Z(:,:,9)=sqrt(2*(3+1))*( +3.*x_3 +3.*x.*y_2 -2.*x);                                                  Z(:,:,10)=sqrt(2*(3+1))*( +1.*x_3 -3.*x.*y_2);                                                       Z(:,:,11)=sqrt(2*(4+1))*( +4.*x_3.*y -4.*x.*y_3);                                                    Z(:,:,12)=sqrt(2*(4+1))*( +8.*x_3.*y +8.*x.*y_3 -6.*x.*y);                                           Z(:,:,13)=sqrt(4+1)*( +6.*x_4 +12.*x_2.*y_2 +6.*y_4 -6.*x_2 -6.*y_2 +1);                         Z(:,:,14)=sqrt(2*(4+1))*( +4.*x_4 +4.*x_2.*y_2 -3.*x_2 -4.*x_2.*y_2 -4.*y_4 +3.*y_2);          Z(:,:,15)=sqrt(2*(4+1))*( +1.*x_4 -6.*x_2.*y_2 +1.*y_4);                                           Z(:,:,16)=sqrt(2*(5+1))*( +5.*x_4.*y -10.*x_2.*y_3 +1.*y_5);                                       Z(:,:,17)=sqrt(2*(5+1))*( +15.*x_4.*y +15.*x_2.*y_3 -12.*x_2.*y -5.*x_2.*y_3 -5.*y_5 +4.*y_3); Z(:,:,18)=sqrt(2*(5+1))*( +10.*x_4.*y +20.*x_2.*y_3 +10.*y_5 -12.*x_2.*y -12.*y_3 +3.*y);        Z(:,:,19)=sqrt(2*(5+1))*( +10.*x_5 +20.*x_3.*y_2 +10.*x.*y_4 -12.*x_3 -12.*x.*y_2 +3.*x);        Z(:,:,20)=sqrt(2*(5+1))*( +5.*x_5 +5.*x_3.*y_2 -4.*x_3 -15.*x_3.*y_2 -15.*x.*y_4 +12.*x.*y_2); Z(:,:,21)=sqrt(2*(5+1))*( +1.*x_5 -10.*x_3.*y_2 +5.*x.*y_4);                                       elseif pd=='dx'Z(:,:,1)=zeros(size(x)); Z(:,:,2)=zeros(size(x)); Z(:,:,3)=sqrt(2*(1+1))*( +1);                                                                       Z(:,:,4)=sqrt(2*(2+1))*( +2.*y);                                                                    Z(:,:,5)=sqrt(2+1)*( +4.*x);                                                                        Z(:,:,6)=sqrt(2*(2+1))*( +2.*x);                                                                    Z(:,:,7)=sqrt(2*(3+1))*( +6.*x.*y);                                                                 Z(:,:,8)=sqrt(2*(3+1))*( +6.*x.*y);                                                                 Z(:,:,9)=sqrt(2*(3+1))*( +9.*x_2 +3.*y_2 -2);                                                     Z(:,:,10)=sqrt(2*(3+1))*( +3.*x_2 -3.*y_2);                                                       Z(:,:,11)=sqrt(2*(4+1))*( +12.*x_2.*y -4.*y_3);                                                   Z(:,:,12)=sqrt(2*(4+1))*( +24.*x_2.*y +8.*y_3 -6.*y);                                             Z(:,:,13)=sqrt(4+1)*( +24.*x_3 +24.*x.*y_2 -12.*x);                                               Z(:,:,14)=sqrt(2*(4+1))*( +16.*x_3 +8.*x.*y_2 -6.*x -8.*x.*y_2);                                 Z(:,:,15)=sqrt(2*(4+1))*( +4.*x_3 -12.*x.*y_2);                                                   Z(:,:,16)=sqrt(2*(5+1))*( +20.*x_3.*y -20.*x.*y_3);                                               Z(:,:,17)=sqrt(2*(5+1))*( +60.*x_3.*y +30.*x.*y_3 -24.*x.*y -10.*x.*y_3);                        Z(:,:,18)=sqrt(2*(5+1))*( +40.*x_3.*y +40.*x.*y_3 -24.*x.*y);                                     Z(:,:,19)=sqrt(2*(5+1))*( +50.*x_4 +60.*x_2.*y_2 +10.*y_4 -36.*x_2 -12.*y_2 +3);              Z(:,:,20)=sqrt(2*(5+1))*( +25.*x_4 +15.*x_2.*y_2 -12.*x_2 -45.*x_2.*y_2 -15.*y_4 +12.*y_2); Z(:,:,21)=sqrt(2*(5+1))*( +5.*x_4 -30.*x_2.*y_2 +5.*y_4);                                       elseif pd=='dy'Z(:,:,1)=zeros(size(x)); Z(:,:,2)=sqrt(2*(1+1))*ones(size(x));                                                                       Z(:,:,3)=zeros(size(x));                                                                          Z(:,:,4)=sqrt(2*(2+1))*( +2.*x);                                                                    Z(:,:,5)=sqrt(2+1)*( +4.*y);                                                                        Z(:,:,6)=sqrt(2*(2+1))*( -2.*y);                                                                    Z(:,:,7)=sqrt(2*(3+1))*( +3.*x_2 -3.*y_2);                                                        Z(:,:,8)=sqrt(2*(3+1))*( +3.*x_2 +9.*y_2 -2);                                                     Z(:,:,9)=sqrt(2*(3+1))*( +6.*x.*y);                                                                 Z(:,:,10)=sqrt(2*(3+1))*( -6.*x.*y);                                                                Z(:,:,11)=sqrt(2*(4+1))*( +4.*x_3 -12.*x.*y_2);                                                   Z(:,:,12)=sqrt(2*(4+1))*( +8.*x_3 +24.*x.*y_2 -6.*x);                                             Z(:,:,13)=sqrt(4+1)*( +24.*x_2.*y +24.*y_3 -12.*y);                                               Z(:,:,14)=sqrt(2*(4+1))*( +8.*x_2.*y -8.*x_2.*y -16.*y_3 +6.*y);                                 Z(:,:,15)=sqrt(2*(4+1))*( -12.*x_2.*y +4.*y_3);                                                   Z(:,:,16)=sqrt(2*(5+1))*( +5.*x_4 -30.*x_2.*y_2 +5.*y_4);                                       Z(:,:,17)=sqrt(2*(5+1))*( +15.*x_4 +45.*x_2.*y_2 -12.*x_2 -15.*x_2.*y_2 -25.*y_4 +12.*y_2); Z(:,:,18)=sqrt(2*(5+1))*( +10.*x_4 +60.*x_2.*y_2 +50.*y_4 -12.*x_2 -36.*y_2 +3);              Z(:,:,19)=sqrt(2*(5+1))*( +40.*x_3.*y +40.*x.*y_3 -24.*x.*y);                                     Z(:,:,20)=sqrt(2*(5+1))*( +10.*x_3.*y -30.*x_3.*y -60.*x.*y_3 +24.*x.*y);                        Z(:,:,21)=sqrt(2*(5+1))*( -20.*x_3.*y +20.*x.*y_3);                                               end