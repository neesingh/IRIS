function [order,frequency,orderModes,frequencyModes]=mode2index(mode)% mode2index  Convert Zernike mode # to double-index convention%% syntax:  [order,frequency,orderModes,frequencyModes]=mode2index(mode);%% input arg:	mode = vector of integer mode numbers as defined in Thibos lab%					 = 1 + VSIA standard mode (piston = mode 0 in VSIA standard)%% output args:  order (or degree) = integer powers of radius variable%				frequency = integer multiple of angular variable%               orderModes = cell array of mode numbers for each order%               frequencyModes = cell array of mode numbers for each ±frequency%% restrictions:  OK for vectors, but not tested for matrix input argument% LNT 4-Mar-99% LNT 3-Mar-00.  Rework the equations to match new ordering of modes incorporated%	in VSIA-2000 standard.  However, for compatibility with lab software, keep the%	old convention of piston=mode 1.  Just subtract 1 to convert mode to VSIA standard.% LNT 16Jun2011. Add orderModes,frequencyModes to output variables.%% See also: INDEX2MODE% © 1999, 2000, 2011 Larry Thibos, Indiana University%% error checkingif any(rem(mode,1))		error('first argument must be an integer');endif any(mode<=0)		error('first argument must be positive');endk=(-3 + sqrt(9 + 8*(mode-1)))/2;	% Malacara eqn. 13.26i=find (rem(k,1));					% find indices for non-integer values of korder = k;							% leave result alone if already an integerorder(i) = 1+fix(k(i));				% but take the next higher integer otherwisefrequency = 2*(mode-1) - order.*(order+2);% old equations used prior to 3Mar00%frequency = order.^2 + 2*(order - mode + 1);		%Malacara eqn. 13.27% compute mode numbers that make up the various orderscounter=0;for k= min(order):max(order)        counter = counter+1;         orderModes{counter} = find(order==k);end% compute mode numbers that make up the various frequenciescounter=0;freq=abs(frequency);for k= min(freq):max(freq)        counter = counter+1;         frequencyModes{counter} = find(freq==k);end% end of function mode2index