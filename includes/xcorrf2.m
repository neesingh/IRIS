function c = xcorrf2(a,b,trim)%  c = xcorrf2(a,b)%   Two-dimensional cross-correlation using Fourier transforms.%	XCORRF2(A,B) computes the crosscorrelation of matrices A and B.%	XCORRF2(A) is the autocorrelation function.%   trim is an optional parameter added by LNT:%     trim=0 (default) returns the full sized cross-correlation%     trim=1 returns a result the same size as a%     trim=2 returns a result the same size as b%     trim=3 returns a result size(a) + size(b) = 1 more row & col that std%%	This routine is functionally equivalent xcorr2 but usually faster.%	See also XCORR2, fftconvolve2, conv2fft, crossCorrelationDemo%%	Author(s): R. Johnson%	$Revision: 1.0 $  $Date: 1995/11/27 $%  Modified by LNT 19Mar06 to have input switch "trim" using the method of%    conv2fft.if nargin<3 | isempty(trim), trim=0; endif nargin<2 | isempty(b), b = a; end%	for autocorrelation	[ma,na] = size(a);	[mb,nb] = size(b);%	make reverse conjugate of one array	b = conj(b(mb:-1:1,nb:-1:1));%	use power of 2 transform lengths	mf = 2^nextpow2(ma+mb);	nf = 2^nextpow2(na+nb);	at = fft2(b,mf,nf);	bt = fft2(a,mf,nf);%	multiply transforms then inverse transform	c = ifft2(at.*bt);%	make real output for real input	if ~any(any(imag(a))) & ~any(any(imag(b)))		c = real(c);    endif trim == 0    %  trim to standard size%   LNT - "standard size" means that returned by xcorr2. For some reason %   this has 1 fewer rows & cols than ma+mb and na+nb.	c(ma+mb:mf,:) = [];	c(:,na+nb:nf) = [];   elseif trim == 1 %  trim to size of a    x=((mb)+mod((mb),2))/2;    y=((nb)+mod((nb),2))/2;    c = c(x+1:x+ma, y+1:y+na); elseif trim==2  %  trim to size of b    x=((ma)+mod((ma),2))/2;    y=((na)+mod((na),2))/2;    c = c(x+1:x+mb, y+1:y+nb); elseif trim==3   %  trim to standard size +1	c(1+ma+mb:mf,:) = [];	c(:,1+na+nb:nf) = [];end 